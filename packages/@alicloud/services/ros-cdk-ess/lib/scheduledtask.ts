import * as ros from '@alicloud/ros-cdk-core';
import { RosScheduledTask } from './ess.generated';
// Generated from the AliCloud ROS Resource Specification
export { RosScheduledTask as ScheduledTaskProperty };

/**
 * Properties for defining a `ScheduledTask`.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-ess-scheduledtask
 */
export interface ScheduledTaskProps {

    /**
     * Property launchTime: Time point at which the scheduled task is triggered.
     * The date format follows the ISO8601 standard and uses UTC time. It is in the format of YYYY-MM-DDThh:mmZ.
     * If RecurrenceType is specified, the time point specified by this attribute is the default time point at which the circle is executed. If RecurrenceType is not specified, the task is executed once on the designated date and time.
     * A time point 90 days after creation or modification cannot be entered.
     */
    readonly launchTime: string | ros.IResolvable;

    /**
     * Property description: Description of the scheduled task, which is 2-200 characters (English or Chinese) long.
     */
    readonly description?: string | ros.IResolvable;

    /**
     * Property desiredCapacity: The ID of the scaling group whose number of instances must be modified when the scheduled task is triggered. If you specify the **ScalingGroupId** parameter for a scheduled task, you must specify the minimum, maximum, or expected numbers of instances for a scaling group in the scheduled task. That is, you must specify at least one of the **MinValue**, **MaxValue**, and **DesiredCapacity** parameters.
     */
    readonly desiredCapacity?: number | ros.IResolvable;

    /**
     * Property launchExpirationTime: Time period within which the failed scheduled task is retried.
     * The default value is 600s.
     * Value range: [0, 21600]
     */
    readonly launchExpirationTime?: number | ros.IResolvable;

    /**
     * Property maxValue: The expected number of instances in the scaling group if you specify the ScalingGroupId parameter.
     * **Note**: You must specify the **DesiredCapacity** parameter when you create a scaling group.
     */
    readonly maxValue?: number | ros.IResolvable;

    /**
     * Property minValue: The maximum number of instances in the scaling group if you specify the ScalingGroupId parameter.
     */
    readonly minValue?: number | ros.IResolvable;

    /**
     * Property recurrenceEndTime: End time of the scheduled task to be repeated.
     * The date format follows the ISO8601 standard and uses UTC time. It is in the format of YYYY-MM-DDThh:mmZ.
     * A time point 90 days after creation or modification cannot be entered.
     * RecurrenceType, RecurrenceValue and RecurrenceEndTime must be specified.
     */
    readonly recurrenceEndTime?: string | ros.IResolvable;

    /**
     * Property recurrenceType: Type of the scheduled task to be repeated. Optional values:
     * - Daily: Recurrence interval by day for a scheduled task.
     * - Weekly: Recurrence interval by week for a scheduled task.
     * - Monthly: Recurrence interval by month for a scheduled task.
     * RecurrenceType, RecurrenceValue and RecurrenceEndTime must be specified.
     */
    readonly recurrenceType?: string | ros.IResolvable;

    /**
     * Property recurrenceValue: Value of the scheduled task to be repeated.
     * - Daily: Only one value in the range [1,31] can be filled.
     * - Weekly: Multiple values can be filled. The values of Sunday to Saturday are 0 to 6 in sequence. Multiple values shall be separated by a comma ",".
     * - Monthly: In the format of A-B. The value range of A and B is 1 to 31, and the B value must be greater than the A value.
     * RecurrenceType, RecurrenceValue and RecurrenceEndTime must be specified.
     */
    readonly recurrenceValue?: string | ros.IResolvable;

    /**
     * Property scalingGroupId: The globally unique ID of the scheduled task. The globally unique ID is generated by the system.
     * **Note**: You cannot specify the **ScheduledAction** and **ScalingGroupId** parameters at the same time.
     */
    readonly scalingGroupId?: string | ros.IResolvable;

    /**
     * Property scheduledAction: Operations performed when the scheduled task is triggered. Fill in the unique identifier of the scaling rule.
     * **Note**: You cannot specify the **ScheduledAction** and **ScalingGroupId** parameters at the same time.
     */
    readonly scheduledAction?: string | ros.IResolvable;

    /**
     * Property scheduledTaskName: Display name of the scheduled task, which must be 2-40 characters (English or Chinese) long. It must begin with a number, an upper\/lower-case letter or a Chinese character and may contain numbers, "_", "-" or ".".
     * The account name is unique in the same region.
     * If this parameter is not specified, the default value ScheduledScalingTaskId is used.
     */
    readonly scheduledTaskName?: string | ros.IResolvable;

    /**
     * Property taskEnabled: Whether to enable the scheduled task.
     * - When the parameter is set to true, the task is enabled.
     * - When the parameter is set to false, the task is disabled.
     * The default value is true.
     */
    readonly taskEnabled?: boolean | ros.IResolvable;
}

/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::ESS::ScheduledTask`, which is used to create a scheduled task by specifying properties.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosScheduledTask`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-ess-scheduledtask
 */
export class ScheduledTask extends ros.Resource {
    protected scope: ros.Construct;
    protected id: string;
    protected props: ScheduledTaskProps;
    protected enableResourcePropertyConstraint: boolean;

    /**
     * Attribute ScheduledTaskId: ID of the scheduled task, which is generated by the system and globally unique.
     */
    public readonly attrScheduledTaskId: ros.IResolvable;

    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope: ros.Construct, id: string, props: ScheduledTaskProps, enableResourcePropertyConstraint:boolean = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;

        const rosScheduledTask = new RosScheduledTask(this, id,  {
            launchTime: props.launchTime,
            description: props.description,
            scalingGroupId: props.scalingGroupId,
            recurrenceType: props.recurrenceType,
            desiredCapacity: props.desiredCapacity,
            scheduledTaskName: props.scheduledTaskName,
            maxValue: props.maxValue,
            launchExpirationTime: props.launchExpirationTime,
            minValue: props.minValue,
            scheduledAction: props.scheduledAction,
            recurrenceEndTime: props.recurrenceEndTime,
            recurrenceValue: props.recurrenceValue,
            taskEnabled: props.taskEnabled,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosScheduledTask;
        this.attrScheduledTaskId = rosScheduledTask.attrScheduledTaskId;
    }
}
