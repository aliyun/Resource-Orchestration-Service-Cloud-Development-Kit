package datasource

import (
	_init_ "github.com/alibabacloud-go/ros-cdk/alicloudroscdkess/jsii"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"

	"github.com/alibabacloud-go/ros-cdk/alicloudroscdkcore"
	"github.com/alibabacloud-go/ros-cdk/alicloudroscdkess/datasource/internal"
	"github.com/aws/constructs-go/constructs/v3"
)

// This class encapsulates and extends the ROS resource type `DATASOURCE::ESS::ScalingRule`.
type ScalingRule interface {
	alicloudroscdkcore.Resource
	// Attribute AdjustmentType: The adjustment method of the scaling rule.
	AttrAdjustmentType() alicloudroscdkcore.IResolvable
	// Attribute AdjustmentValue: The number of instances that must be scaled based on the scaling rule.
	AttrAdjustmentValue() alicloudroscdkcore.IResolvable
	// Attribute Alarms: The event-triggered tasks that are associated with the scaling rule.
	//
	// The value of this parameter is returned only if you set ShowAlarmRules to true. Otherwise, null is returned.
	AttrAlarms() alicloudroscdkcore.IResolvable
	// Attribute Cooldown: The cooldown period of the scaling rule.
	AttrCooldown() alicloudroscdkcore.IResolvable
	// Attribute DisableScaleIn: Indicates whether scale-in is disabled.
	AttrDisableScaleIn() alicloudroscdkcore.IResolvable
	// Attribute EstimatedInstanceWarmup: The warm-up period of instances.
	AttrEstimatedInstanceWarmup() alicloudroscdkcore.IResolvable
	// Attribute InitialMaxSize: The maximum number of ECS instances that can be contained in the scaling group.
	AttrInitialMaxSize() alicloudroscdkcore.IResolvable
	// Attribute MaxSize: The maximum number of ECS instances that can be contained in the scaling group.
	AttrMaxSize() alicloudroscdkcore.IResolvable
	// Attribute MetricName: The name of the metric of the event-triggered task that is associated with the scaling rule.
	AttrMetricName() alicloudroscdkcore.IResolvable
	// Attribute MinAdjustmentMagnitude: The minimum number of instances that must be scaled.
	AttrMinAdjustmentMagnitude() alicloudroscdkcore.IResolvable
	// Attribute MinSize: The minimum number of ECS instances that must be contained in the scaling group.
	AttrMinSize() alicloudroscdkcore.IResolvable
	// Attribute PredictiveScalingMode: The mode of the predictive scaling rule.
	AttrPredictiveScalingMode() alicloudroscdkcore.IResolvable
	// Attribute PredictiveTaskBufferTime: The amount of buffer time before prediction tasks are executed.
	AttrPredictiveTaskBufferTime() alicloudroscdkcore.IResolvable
	// Attribute PredictiveValueBehavior: The action on the predicted maximum value.
	AttrPredictiveValueBehavior() alicloudroscdkcore.IResolvable
	// Attribute PredictiveValueBuffer: The ratio based on which the predicted value is increased when PredictiveValueBehavior is set to PredictiveValueOverrideMaxWithBuffer.
	AttrPredictiveValueBuffer() alicloudroscdkcore.IResolvable
	// Attribute ScaleInEvaluationCount: The number of consecutive times that the event-triggered task for scale-in purposes must meet the threshold conditions before an alert is triggered.
	AttrScaleInEvaluationCount() alicloudroscdkcore.IResolvable
	// Attribute ScaleOutEvaluationCount: The number of consecutive times that the event-triggered task created for scale-out purposes must meet the threshold conditions before an alert is triggered.
	AttrScaleOutEvaluationCount() alicloudroscdkcore.IResolvable
	// Attribute ScalingGroupId: The ID of the scaling group.
	AttrScalingGroupId() alicloudroscdkcore.IResolvable
	// Attribute ScalingRuleAri: The unique identifier of the scaling rule.
	AttrScalingRuleAri() alicloudroscdkcore.IResolvable
	// Attribute ScalingRuleId: The ID of the scaling rule.
	AttrScalingRuleId() alicloudroscdkcore.IResolvable
	// Attribute ScalingRuleName: The name of the scaling rule.
	AttrScalingRuleName() alicloudroscdkcore.IResolvable
	// Attribute ScalingRuleType: The type of the scaling rule.
	AttrScalingRuleType() alicloudroscdkcore.IResolvable
	// Attribute StepAdjustments: The step adjustments of the step scaling rule.
	AttrStepAdjustments() alicloudroscdkcore.IResolvable
	// Attribute TargetValue: The target value of the metric.
	AttrTargetValue() alicloudroscdkcore.IResolvable
	EnableResourcePropertyConstraint() *bool
	SetEnableResourcePropertyConstraint(val *bool)
	Id() *string
	SetId(val *string)
	// The construct tree node associated with this construct.
	Node() alicloudroscdkcore.ConstructNode
	// Returns a string-encoded token that resolves to the physical name that should be passed to the ROS resource.
	//
	// This value will resolve to one of the following:
	// - a concrete value (e.g. `"my-awesome-bucket"`)
	// - `undefined`, when a name should be generated by ROS
	// - a concrete name generated automatically during synthesis, in
	//    cross-environment scenarios.
	// Experimental.
	PhysicalName() *string
	Props() *ScalingRuleProps
	SetProps(val *ScalingRuleProps)
	Ref() *string
	Resource() alicloudroscdkcore.RosResource
	SetResource(val alicloudroscdkcore.RosResource)
	Scope() alicloudroscdkcore.Construct
	SetScope(val alicloudroscdkcore.Construct)
	// The stack in which this resource is defined.
	Stack() alicloudroscdkcore.Stack
	AddCondition(condition alicloudroscdkcore.RosCondition)
	AddCount(count interface{})
	AddDependency(resource alicloudroscdkcore.Resource)
	AddResourceDesc(desc *string)
	ApplyRemovalPolicy(policy alicloudroscdkcore.RemovalPolicy)
	GeneratePhysicalName() *string
	GetAtt(name *string) alicloudroscdkcore.IResolvable
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	OnPrepare()
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	OnSynthesize(session constructs.ISynthesisSession)
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if the construct is valid.
	OnValidate() *[]*string
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	Prepare()
	SetMetadata(key *string, value interface{})
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	Synthesize(session alicloudroscdkcore.ISynthesisSession)
	// Returns a string representation of this construct.
	ToString() *string
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if the construct is valid.
	Validate() *[]*string
}

// The jsii proxy struct for ScalingRule
type jsiiProxy_ScalingRule struct {
	internal.Type__alicloudroscdkcoreResource
}

func (j *jsiiProxy_ScalingRule) AttrAdjustmentType() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrAdjustmentType",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrAdjustmentValue() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrAdjustmentValue",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrAlarms() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrAlarms",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrCooldown() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrCooldown",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrDisableScaleIn() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrDisableScaleIn",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrEstimatedInstanceWarmup() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrEstimatedInstanceWarmup",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrInitialMaxSize() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrInitialMaxSize",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrMaxSize() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrMaxSize",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrMetricName() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrMetricName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrMinAdjustmentMagnitude() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrMinAdjustmentMagnitude",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrMinSize() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrMinSize",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrPredictiveScalingMode() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrPredictiveScalingMode",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrPredictiveTaskBufferTime() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrPredictiveTaskBufferTime",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrPredictiveValueBehavior() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrPredictiveValueBehavior",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrPredictiveValueBuffer() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrPredictiveValueBuffer",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScaleInEvaluationCount() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScaleInEvaluationCount",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScaleOutEvaluationCount() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScaleOutEvaluationCount",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScalingGroupId() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScalingGroupId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScalingRuleAri() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScalingRuleAri",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScalingRuleId() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScalingRuleId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScalingRuleName() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScalingRuleName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrScalingRuleType() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrScalingRuleType",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrStepAdjustments() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrStepAdjustments",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) AttrTargetValue() alicloudroscdkcore.IResolvable {
	var returns alicloudroscdkcore.IResolvable
	_jsii_.Get(
		j,
		"attrTargetValue",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) EnableResourcePropertyConstraint() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"enableResourcePropertyConstraint",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Id() *string {
	var returns *string
	_jsii_.Get(
		j,
		"id",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Node() alicloudroscdkcore.ConstructNode {
	var returns alicloudroscdkcore.ConstructNode
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) PhysicalName() *string {
	var returns *string
	_jsii_.Get(
		j,
		"physicalName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Props() *ScalingRuleProps {
	var returns *ScalingRuleProps
	_jsii_.Get(
		j,
		"props",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Ref() *string {
	var returns *string
	_jsii_.Get(
		j,
		"ref",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Resource() alicloudroscdkcore.RosResource {
	var returns alicloudroscdkcore.RosResource
	_jsii_.Get(
		j,
		"resource",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Scope() alicloudroscdkcore.Construct {
	var returns alicloudroscdkcore.Construct
	_jsii_.Get(
		j,
		"scope",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ScalingRule) Stack() alicloudroscdkcore.Stack {
	var returns alicloudroscdkcore.Stack
	_jsii_.Get(
		j,
		"stack",
		&returns,
	)
	return returns
}


// Param scope - scope in which this resource is defined Param id    - scoped id of the resource Param props - resource properties.
func NewScalingRule(scope alicloudroscdkcore.Construct, id *string, props *ScalingRuleProps, enableResourcePropertyConstraint *bool) ScalingRule {
	_init_.Initialize()

	if err := validateNewScalingRuleParameters(scope, id, props); err != nil {
		panic(err)
	}
	j := jsiiProxy_ScalingRule{}

	_jsii_.Create(
		"@alicloud/ros-cdk-ess.datasource.ScalingRule",
		[]interface{}{scope, id, props, enableResourcePropertyConstraint},
		&j,
	)

	return &j
}

// Param scope - scope in which this resource is defined Param id    - scoped id of the resource Param props - resource properties.
func NewScalingRule_Override(s ScalingRule, scope alicloudroscdkcore.Construct, id *string, props *ScalingRuleProps, enableResourcePropertyConstraint *bool) {
	_init_.Initialize()

	_jsii_.Create(
		"@alicloud/ros-cdk-ess.datasource.ScalingRule",
		[]interface{}{scope, id, props, enableResourcePropertyConstraint},
		s,
	)
}

func (j *jsiiProxy_ScalingRule)SetEnableResourcePropertyConstraint(val *bool) {
	if err := j.validateSetEnableResourcePropertyConstraintParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"enableResourcePropertyConstraint",
		val,
	)
}

func (j *jsiiProxy_ScalingRule)SetId(val *string) {
	if err := j.validateSetIdParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"id",
		val,
	)
}

func (j *jsiiProxy_ScalingRule)SetProps(val *ScalingRuleProps) {
	if err := j.validateSetPropsParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"props",
		val,
	)
}

func (j *jsiiProxy_ScalingRule)SetResource(val alicloudroscdkcore.RosResource) {
	_jsii_.Set(
		j,
		"resource",
		val,
	)
}

func (j *jsiiProxy_ScalingRule)SetScope(val alicloudroscdkcore.Construct) {
	if err := j.validateSetScopeParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"scope",
		val,
	)
}

// Return whether the given object is a Construct.
func ScalingRule_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	if err := validateScalingRule_IsConstructParameters(x); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@alicloud/ros-cdk-ess.datasource.ScalingRule",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ScalingRule) AddCondition(condition alicloudroscdkcore.RosCondition) {
	if err := s.validateAddConditionParameters(condition); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addCondition",
		[]interface{}{condition},
	)
}

func (s *jsiiProxy_ScalingRule) AddCount(count interface{}) {
	if err := s.validateAddCountParameters(count); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addCount",
		[]interface{}{count},
	)
}

func (s *jsiiProxy_ScalingRule) AddDependency(resource alicloudroscdkcore.Resource) {
	if err := s.validateAddDependencyParameters(resource); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addDependency",
		[]interface{}{resource},
	)
}

func (s *jsiiProxy_ScalingRule) AddResourceDesc(desc *string) {
	if err := s.validateAddResourceDescParameters(desc); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addResourceDesc",
		[]interface{}{desc},
	)
}

func (s *jsiiProxy_ScalingRule) ApplyRemovalPolicy(policy alicloudroscdkcore.RemovalPolicy) {
	if err := s.validateApplyRemovalPolicyParameters(policy); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"applyRemovalPolicy",
		[]interface{}{policy},
	)
}

func (s *jsiiProxy_ScalingRule) GeneratePhysicalName() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"generatePhysicalName",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ScalingRule) GetAtt(name *string) alicloudroscdkcore.IResolvable {
	if err := s.validateGetAttParameters(name); err != nil {
		panic(err)
	}
	var returns alicloudroscdkcore.IResolvable

	_jsii_.Invoke(
		s,
		"getAtt",
		[]interface{}{name},
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ScalingRule) OnPrepare() {
	_jsii_.InvokeVoid(
		s,
		"onPrepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_ScalingRule) OnSynthesize(session constructs.ISynthesisSession) {
	if err := s.validateOnSynthesizeParameters(session); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"onSynthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_ScalingRule) OnValidate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"onValidate",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ScalingRule) Prepare() {
	_jsii_.InvokeVoid(
		s,
		"prepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_ScalingRule) SetMetadata(key *string, value interface{}) {
	if err := s.validateSetMetadataParameters(key, value); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"setMetadata",
		[]interface{}{key, value},
	)
}

func (s *jsiiProxy_ScalingRule) Synthesize(session alicloudroscdkcore.ISynthesisSession) {
	if err := s.validateSynthesizeParameters(session); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"synthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_ScalingRule) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ScalingRule) Validate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"validate",
		nil, // no parameters
		&returns,
	)

	return returns
}

