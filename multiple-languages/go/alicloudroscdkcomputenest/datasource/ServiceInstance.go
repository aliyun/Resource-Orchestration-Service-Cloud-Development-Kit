package datasource

import (
	_init_ "github.com/alibabacloud-go/ros-cdk/alicloudroscdkcomputenest/jsii"
	_jsii_ "github.com/aws/jsii-runtime-go/runtime"

	"github.com/alibabacloud-go/ros-cdk/alicloudroscdkcomputenest/datasource/internal"
	"github.com/alibabacloud-go/ros-cdk/alicloudroscdkcore"
	"github.com/aws/constructs-go/constructs/v3"
)

// This class encapsulates and extends the ROS resource type `DATASOURCE::ComputeNest::ServiceInstance`.
type ServiceInstance interface {
	alicloudroscdkcore.Resource
	IServiceInstance
	// Attribute Components: Cloud Marketplace additional billing items.
	AttrComponents() interface{}
	// Attribute CreateTime: The time when the serviceInstance was created.
	AttrCreateTime() interface{}
	// Attribute EnableInstanceOps: Indicates whether the service instance supports the operation feature.
	AttrEnableInstanceOps() interface{}
	// Attribute EnableUserPrometheus: Whether to enable Prometheus monitoring.
	AttrEnableUserPrometheus() interface{}
	// Attribute IsOperated: Indicates whether the hosted O&M feature is enabled for the service instance.
	AttrIsOperated() interface{}
	// Attribute LicenseEndTime: The expiration time of licence.
	AttrLicenseEndTime() interface{}
	// Attribute MarketInstanceId: The ID of the cloud marketplace instance.
	AttrMarketInstanceId() interface{}
	// Attribute NetworkConfig: The network configurations.
	AttrNetworkConfig() interface{}
	// Attribute Outputs: The outputs returned from creating the service instance.
	AttrOutputs() interface{}
	// Attribute Parameters: The parameters configured for the service instance.
	AttrParameters() interface{}
	// Attribute PredefinedParameterName: The name of the package .
	AttrPredefinedParameterName() interface{}
	// Attribute Progress: The deployment progress of the service instance.
	//
	// Unit: percentage.
	AttrProgress() interface{}
	// Attribute ResourceGroupId: The resource group ID.
	AttrResourceGroupId() interface{}
	// Attribute Service: The information about the service to which the service instance belongs.
	AttrService() interface{}
	// Attribute ServiceInstanceId: The ID of the service instance.
	AttrServiceInstanceId() interface{}
	// Attribute ServiceInstanceName: The name of the resource.
	AttrServiceInstanceName() interface{}
	// Attribute ServiceType: The type of the service.
	AttrServiceType() interface{}
	// Attribute Source: The source of the service instance.
	AttrSource() interface{}
	// Attribute StatusDetail: The description of the deployment state of the service instance.
	AttrStatusDetail() interface{}
	// Attribute SupplierUid: The Alibaba Cloud account ID of the service provider.
	AttrSupplierUid() interface{}
	// Attribute Tags: The tags of the service instance.
	AttrTags() interface{}
	// Attribute TemplateName: The name of the template.
	AttrTemplateName() interface{}
	// Attribute UpdateTime: The time when the serviceInstance was last updated.
	AttrUpdateTime() interface{}
	// Attribute UserId: The AliUid of the user.
	AttrUserId() interface{}
	EnableResourcePropertyConstraint() *bool
	SetEnableResourcePropertyConstraint(val *bool)
	// The environment this resource belongs to.
	//
	// For resources that are created and managed by the CDK
	// (generally, those created by creating new class instances like Role, Bucket, etc.),
	// this is always the same as the environment of the stack they belong to;
	// however, for imported resources
	// (those obtained from static methods like fromRoleArn, fromBucketName, etc.),
	// that might be different than the stack they were imported into.
	Env() alicloudroscdkcore.IResourceEnvironment
	Id() *string
	SetId(val *string)
	// The construct tree node associated with this construct.
	Node() alicloudroscdkcore.ConstructNode
	// Returns a string-encoded token that resolves to the physical name that should be passed to the ROS resource.
	//
	// This value will resolve to one of the following:
	// - a concrete value (e.g. `"my-awesome-bucket"`)
	// - `undefined`, when a name should be generated by ROS
	// - a concrete name generated automatically during synthesis, in
	//    cross-environment scenarios.
	// Experimental.
	PhysicalName() *string
	Props() *ServiceInstanceProps
	Ref() *string
	Resource() alicloudroscdkcore.RosResource
	SetResource(val alicloudroscdkcore.RosResource)
	Scope() alicloudroscdkcore.Construct
	SetScope(val alicloudroscdkcore.Construct)
	// The stack in which this resource is defined.
	Stack() alicloudroscdkcore.Stack
	AddCondition(condition alicloudroscdkcore.RosCondition)
	AddCount(count interface{})
	AddDependency(resource alicloudroscdkcore.Resource)
	AddResourceDesc(desc *string)
	ApplyRemovalPolicy(policy alicloudroscdkcore.RemovalPolicy)
	FetchCondition() alicloudroscdkcore.RosCondition
	FetchDependency() *[]*string
	FetchResourceDesc() *string
	GeneratePhysicalName() *string
	GetAtt(name *string) alicloudroscdkcore.IResolvable
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	OnPrepare()
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	OnSynthesize(session constructs.ISynthesisSession)
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if the construct is valid.
	OnValidate() *[]*string
	// Perform final modifications before synthesis.
	//
	// This method can be implemented by derived constructs in order to perform
	// final changes before synthesis. prepare() will be called after child
	// constructs have been prepared.
	//
	// This is an advanced framework feature. Only use this if you
	// understand the implications.
	Prepare()
	SetMetadata(key *string, value interface{})
	// Allows this construct to emit artifacts into the cloud assembly during synthesis.
	//
	// This method is usually implemented by framework-level constructs such as `Stack` and `Asset`
	// as they participate in synthesizing the cloud assembly.
	Synthesize(session alicloudroscdkcore.ISynthesisSession)
	// Returns a string representation of this construct.
	ToString() *string
	// Validate the current construct.
	//
	// This method can be implemented by derived constructs in order to perform
	// validation logic. It is called on all constructs before synthesis.
	//
	// Returns: An array of validation error messages, or an empty array if the construct is valid.
	Validate() *[]*string
}

// The jsii proxy struct for ServiceInstance
type jsiiProxy_ServiceInstance struct {
	internal.Type__alicloudroscdkcoreResource
	jsiiProxy_IServiceInstance
}

func (j *jsiiProxy_ServiceInstance) AttrComponents() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrComponents",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrCreateTime() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrCreateTime",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrEnableInstanceOps() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrEnableInstanceOps",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrEnableUserPrometheus() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrEnableUserPrometheus",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrIsOperated() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrIsOperated",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrLicenseEndTime() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrLicenseEndTime",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrMarketInstanceId() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrMarketInstanceId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrNetworkConfig() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrNetworkConfig",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrOutputs() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrOutputs",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrParameters() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrParameters",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrPredefinedParameterName() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrPredefinedParameterName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrProgress() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrProgress",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrResourceGroupId() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrResourceGroupId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrService() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrService",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrServiceInstanceId() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrServiceInstanceId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrServiceInstanceName() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrServiceInstanceName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrServiceType() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrServiceType",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrSource() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrSource",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrStatusDetail() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrStatusDetail",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrSupplierUid() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrSupplierUid",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrTags() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrTags",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrTemplateName() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrTemplateName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrUpdateTime() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrUpdateTime",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) AttrUserId() interface{} {
	var returns interface{}
	_jsii_.Get(
		j,
		"attrUserId",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) EnableResourcePropertyConstraint() *bool {
	var returns *bool
	_jsii_.Get(
		j,
		"enableResourcePropertyConstraint",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Env() alicloudroscdkcore.IResourceEnvironment {
	var returns alicloudroscdkcore.IResourceEnvironment
	_jsii_.Get(
		j,
		"env",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Id() *string {
	var returns *string
	_jsii_.Get(
		j,
		"id",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Node() alicloudroscdkcore.ConstructNode {
	var returns alicloudroscdkcore.ConstructNode
	_jsii_.Get(
		j,
		"node",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) PhysicalName() *string {
	var returns *string
	_jsii_.Get(
		j,
		"physicalName",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Props() *ServiceInstanceProps {
	var returns *ServiceInstanceProps
	_jsii_.Get(
		j,
		"props",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Ref() *string {
	var returns *string
	_jsii_.Get(
		j,
		"ref",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Resource() alicloudroscdkcore.RosResource {
	var returns alicloudroscdkcore.RosResource
	_jsii_.Get(
		j,
		"resource",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Scope() alicloudroscdkcore.Construct {
	var returns alicloudroscdkcore.Construct
	_jsii_.Get(
		j,
		"scope",
		&returns,
	)
	return returns
}

func (j *jsiiProxy_ServiceInstance) Stack() alicloudroscdkcore.Stack {
	var returns alicloudroscdkcore.Stack
	_jsii_.Get(
		j,
		"stack",
		&returns,
	)
	return returns
}


// Param scope - scope in which this resource is defined Param id    - scoped id of the resource Param props - resource properties.
func NewServiceInstance(scope alicloudroscdkcore.Construct, id *string, props *ServiceInstanceProps, enableResourcePropertyConstraint *bool) ServiceInstance {
	_init_.Initialize()

	if err := validateNewServiceInstanceParameters(scope, id, props); err != nil {
		panic(err)
	}
	j := jsiiProxy_ServiceInstance{}

	_jsii_.Create(
		"@alicloud/ros-cdk-computenest.datasource.ServiceInstance",
		[]interface{}{scope, id, props, enableResourcePropertyConstraint},
		&j,
	)

	return &j
}

// Param scope - scope in which this resource is defined Param id    - scoped id of the resource Param props - resource properties.
func NewServiceInstance_Override(s ServiceInstance, scope alicloudroscdkcore.Construct, id *string, props *ServiceInstanceProps, enableResourcePropertyConstraint *bool) {
	_init_.Initialize()

	_jsii_.Create(
		"@alicloud/ros-cdk-computenest.datasource.ServiceInstance",
		[]interface{}{scope, id, props, enableResourcePropertyConstraint},
		s,
	)
}

func (j *jsiiProxy_ServiceInstance)SetEnableResourcePropertyConstraint(val *bool) {
	if err := j.validateSetEnableResourcePropertyConstraintParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"enableResourcePropertyConstraint",
		val,
	)
}

func (j *jsiiProxy_ServiceInstance)SetId(val *string) {
	if err := j.validateSetIdParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"id",
		val,
	)
}

func (j *jsiiProxy_ServiceInstance)SetResource(val alicloudroscdkcore.RosResource) {
	_jsii_.Set(
		j,
		"resource",
		val,
	)
}

func (j *jsiiProxy_ServiceInstance)SetScope(val alicloudroscdkcore.Construct) {
	if err := j.validateSetScopeParameters(val); err != nil {
		panic(err)
	}
	_jsii_.Set(
		j,
		"scope",
		val,
	)
}

// Return whether the given object is a Construct.
func ServiceInstance_IsConstruct(x interface{}) *bool {
	_init_.Initialize()

	if err := validateServiceInstance_IsConstructParameters(x); err != nil {
		panic(err)
	}
	var returns *bool

	_jsii_.StaticInvoke(
		"@alicloud/ros-cdk-computenest.datasource.ServiceInstance",
		"isConstruct",
		[]interface{}{x},
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) AddCondition(condition alicloudroscdkcore.RosCondition) {
	if err := s.validateAddConditionParameters(condition); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addCondition",
		[]interface{}{condition},
	)
}

func (s *jsiiProxy_ServiceInstance) AddCount(count interface{}) {
	if err := s.validateAddCountParameters(count); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addCount",
		[]interface{}{count},
	)
}

func (s *jsiiProxy_ServiceInstance) AddDependency(resource alicloudroscdkcore.Resource) {
	if err := s.validateAddDependencyParameters(resource); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addDependency",
		[]interface{}{resource},
	)
}

func (s *jsiiProxy_ServiceInstance) AddResourceDesc(desc *string) {
	if err := s.validateAddResourceDescParameters(desc); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"addResourceDesc",
		[]interface{}{desc},
	)
}

func (s *jsiiProxy_ServiceInstance) ApplyRemovalPolicy(policy alicloudroscdkcore.RemovalPolicy) {
	if err := s.validateApplyRemovalPolicyParameters(policy); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"applyRemovalPolicy",
		[]interface{}{policy},
	)
}

func (s *jsiiProxy_ServiceInstance) FetchCondition() alicloudroscdkcore.RosCondition {
	var returns alicloudroscdkcore.RosCondition

	_jsii_.Invoke(
		s,
		"fetchCondition",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) FetchDependency() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"fetchDependency",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) FetchResourceDesc() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"fetchResourceDesc",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) GeneratePhysicalName() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"generatePhysicalName",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) GetAtt(name *string) alicloudroscdkcore.IResolvable {
	if err := s.validateGetAttParameters(name); err != nil {
		panic(err)
	}
	var returns alicloudroscdkcore.IResolvable

	_jsii_.Invoke(
		s,
		"getAtt",
		[]interface{}{name},
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) OnPrepare() {
	_jsii_.InvokeVoid(
		s,
		"onPrepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_ServiceInstance) OnSynthesize(session constructs.ISynthesisSession) {
	if err := s.validateOnSynthesizeParameters(session); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"onSynthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_ServiceInstance) OnValidate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"onValidate",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) Prepare() {
	_jsii_.InvokeVoid(
		s,
		"prepare",
		nil, // no parameters
	)
}

func (s *jsiiProxy_ServiceInstance) SetMetadata(key *string, value interface{}) {
	if err := s.validateSetMetadataParameters(key, value); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"setMetadata",
		[]interface{}{key, value},
	)
}

func (s *jsiiProxy_ServiceInstance) Synthesize(session alicloudroscdkcore.ISynthesisSession) {
	if err := s.validateSynthesizeParameters(session); err != nil {
		panic(err)
	}
	_jsii_.InvokeVoid(
		s,
		"synthesize",
		[]interface{}{session},
	)
}

func (s *jsiiProxy_ServiceInstance) ToString() *string {
	var returns *string

	_jsii_.Invoke(
		s,
		"toString",
		nil, // no parameters
		&returns,
	)

	return returns
}

func (s *jsiiProxy_ServiceInstance) Validate() *[]*string {
	var returns *[]*string

	_jsii_.Invoke(
		s,
		"validate",
		nil, // no parameters
		&returns,
	)

	return returns
}

