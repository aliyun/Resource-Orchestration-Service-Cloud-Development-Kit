"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChildInstanceRouteEntryToAttachment = exports.ChildInstanceRouteEntryToAttachmentProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cen_generated_1 = require("./cen.generated");
Object.defineProperty(exports, "ChildInstanceRouteEntryToAttachmentProperty", { enumerable: true, get: function () { return cen_generated_1.RosChildInstanceRouteEntryToAttachment; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::CEN::ChildInstanceRouteEntryToAttachment`, which is used to add a route to a network instance that is connected to an Enterprise Edition transit router.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosChildInstanceRouteEntryToAttachment`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-cen-childinstancerouteentrytoattachment
 */
class ChildInstanceRouteEntryToAttachment extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosChildInstanceRouteEntryToAttachment = new cen_generated_1.RosChildInstanceRouteEntryToAttachment(this, id, {
            transitRouterAttachmentId: props.transitRouterAttachmentId,
            routeTableId: props.routeTableId,
            cenId: props.cenId,
            destinationCidrBlock: props.destinationCidrBlock,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosChildInstanceRouteEntryToAttachment;
        this.attrCenId = rosChildInstanceRouteEntryToAttachment.attrCenId;
        this.attrDestinationCidrBlock = rosChildInstanceRouteEntryToAttachment.attrDestinationCidrBlock;
        this.attrRouteTableId = rosChildInstanceRouteEntryToAttachment.attrRouteTableId;
        this.attrTransitRouterAttachmentId = rosChildInstanceRouteEntryToAttachment.attrTransitRouterAttachmentId;
    }
}
exports.ChildInstanceRouteEntryToAttachment = ChildInstanceRouteEntryToAttachment;
//# sourceMappingURL=data:application/json;base64,