"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PluginClass = exports.PluginClassProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const apig_generated_1 = require("./apig.generated");
Object.defineProperty(exports, "PluginClassProperty", { enumerable: true, get: function () { return apig_generated_1.RosPluginClass; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::APIG::PluginClass`.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosPluginClass`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-apig-pluginclass
 */
class PluginClass extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosPluginClass = new apig_generated_1.RosPluginClass(this, id, {
            wasmUrl: props.wasmUrl,
            versionDescription: props.versionDescription,
            description: props.description,
            pluginClassName: props.pluginClassName,
            version: props.version,
            alias: props.alias,
            executePriority: props.executePriority,
            supportedMinGatewayVersion: props.supportedMinGatewayVersion,
            wasmLanguage: props.wasmLanguage,
            executeStage: props.executeStage,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosPluginClass;
        this.attrAlias = rosPluginClass.attrAlias;
        this.attrDescription = rosPluginClass.attrDescription;
        this.attrDocument = rosPluginClass.attrDocument;
        this.attrPluginClassName = rosPluginClass.attrPluginClassName;
        this.attrType = rosPluginClass.attrType;
        this.attrWasmLanguage = rosPluginClass.attrWasmLanguage;
    }
}
exports.PluginClass = PluginClass;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luY2xhc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwbHVnaW5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMscURBQWtEO0FBRXZCLG9HQUZsQiwrQkFBYyxPQUV1QjtBQTJEOUM7Ozs7R0FJRztBQUNILE1BQWEsV0FBWSxTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBb0N6Qzs7OztPQUlHO0lBQ0gsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUF1QixFQUFFLG1DQUEyQyxJQUFJO1FBQ2xILEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsZ0NBQWdDLEdBQUcsZ0NBQWdDLENBQUM7UUFFekUsTUFBTSxjQUFjLEdBQUcsSUFBSSwrQkFBYyxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUc7WUFDakQsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPO1lBQ3RCLGtCQUFrQixFQUFFLEtBQUssQ0FBQyxrQkFBa0I7WUFDNUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO1lBQzlCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtZQUN0QyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU87WUFDdEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO1lBQ2xCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtZQUN0QywwQkFBMEIsRUFBRSxLQUFLLENBQUMsMEJBQTBCO1lBQzVELFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWTtZQUNoQyxZQUFZLEVBQUUsS0FBSyxDQUFDLFlBQVk7U0FDbkMsRUFBRSxnQ0FBZ0MsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDcEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxjQUFjLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFjLENBQUMsU0FBUyxDQUFDO1FBQzFDLElBQUksQ0FBQyxlQUFlLEdBQUcsY0FBYyxDQUFDLGVBQWUsQ0FBQztRQUN0RCxJQUFJLENBQUMsWUFBWSxHQUFHLGNBQWMsQ0FBQyxZQUFZLENBQUM7UUFDaEQsSUFBSSxDQUFDLG1CQUFtQixHQUFHLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQztRQUM5RCxJQUFJLENBQUMsUUFBUSxHQUFHLGNBQWMsQ0FBQyxRQUFRLENBQUM7UUFDeEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUM1RCxDQUFDO0NBQ0o7QUFwRUQsa0NBb0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcm9zIGZyb20gJ0BhbGljbG91ZC9yb3MtY2RrLWNvcmUnO1xuaW1wb3J0IHsgUm9zUGx1Z2luQ2xhc3MgfSBmcm9tICcuL2FwaWcuZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zUGx1Z2luQ2xhc3MgYXMgUGx1Z2luQ2xhc3NQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYFBsdWdpbkNsYXNzYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWFwaWctcGx1Z2luY2xhc3NcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQbHVnaW5DbGFzc1Byb3BzIHtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGRlc2NyaXB0aW9uOiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHBsdWdpbiBjbGFzcy5cbiAgICAgKi9cbiAgICByZWFkb25seSBkZXNjcmlwdGlvbjogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgZXhlY3V0ZVByaW9yaXR5OiBUaGUgZXhlY3V0ZSBwcmlvcml0eSBvZiB0aGUgUGx1Z2luLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGV4ZWN1dGVQcmlvcml0eTogbnVtYmVyIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgZXhlY3V0ZVN0YWdlOiBUaGUgRXhlY3V0aW9uIHN0YWdlLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGV4ZWN1dGVTdGFnZTogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcGx1Z2luQ2xhc3NOYW1lOiBUaGUgbmFtZSBvZiB0aGUgcGx1Z2luIGNsYXNzLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHBsdWdpbkNsYXNzTmFtZTogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgdmVyc2lvbjogVGhlIHZlcnNpb24gb2YgcGx1Z2luIGNsYXNzLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHZlcnNpb246IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHZlcnNpb25EZXNjcmlwdGlvbjogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSB2ZXJzaW9uIC5cbiAgICAgKi9cbiAgICByZWFkb25seSB2ZXJzaW9uRGVzY3JpcHRpb246IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHdhc21MYW5ndWFnZTogdGhlIGxhbmd1YWdlIG9mIHRoZSB3YXNtLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHdhc21MYW5ndWFnZTogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgd2FzbVVybDogVGhlIHVybCBvZiB0aGUgd2FzbS5cbiAgICAgKi9cbiAgICByZWFkb25seSB3YXNtVXJsOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBhbGlhczogVGhlIGFsaWFzIG9mIHRoZSBwbHVnaW4gY2xhc3MuXG4gICAgICovXG4gICAgcmVhZG9ubHkgYWxpYXM/OiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBzdXBwb3J0ZWRNaW5HYXRld2F5VmVyc2lvbjogVGhlIHN1cHBvcnRlZCBtaW5pbXVtIGdhdGV3YXkgdmVyc2lvbi5cbiAgICAgKi9cbiAgICByZWFkb25seSBzdXBwb3J0ZWRNaW5HYXRld2F5VmVyc2lvbj86IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcbn1cblxuLyoqXG4gKiBUaGlzIGNsYXNzIGVuY2Fwc3VsYXRlcyBhbmQgZXh0ZW5kcyB0aGUgUk9TIHJlc291cmNlIHR5cGUgYEFMSVlVTjo6QVBJRzo6UGx1Z2luQ2xhc3NgLlxuICogQE5vdGUgVGhpcyBjbGFzcyBtYXkgaGF2ZSBzb21lIG5ldyBmdW5jdGlvbnMgdG8gZmFjaWxpdGF0ZSBkZXZlbG9wbWVudCwgc28gaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHRoaXMgY2xhc3MgaW5zdGVhZCBvZiBgUm9zUGx1Z2luQ2xhc3NgZm9yIGEgbW9yZSBjb252ZW5pZW50IGRldmVsb3BtZW50IGV4cGVyaWVuY2UuXG4gKiBTZWUgaHR0cHM6Ly93d3cuYWxpYmFiYWNsb3VkLmNvbS9oZWxwL3Jvcy9kZXZlbG9wZXItcmVmZXJlbmNlL2FsaXl1bi1hcGlnLXBsdWdpbmNsYXNzXG4gKi9cbmV4cG9ydCBjbGFzcyBQbHVnaW5DbGFzcyBleHRlbmRzIHJvcy5SZXNvdXJjZSB7XG4gICAgcHJvdGVjdGVkIHNjb3BlOiByb3MuQ29uc3RydWN0O1xuICAgIHByb3RlY3RlZCBpZDogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBwcm9wczogUGx1Z2luQ2xhc3NQcm9wcztcbiAgICBwcm90ZWN0ZWQgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQ6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgQWxpYXM6IFRoZSBhbGlhcyBvZiB0aGUgcGx1Z2luIGNsYXNzLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyQWxpYXM6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBEZXNjcmlwdGlvbjogVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBwbHVnaW4gY2xhc3MuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJEZXNjcmlwdGlvbjogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIERvY3VtZW50OiBUaGUgZG9jdW1lbnQgb2YgcGx1Z2luLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyRG9jdW1lbnQ6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBQbHVnaW5DbGFzc05hbWU6IFRoZSBuYW1lIG9mIHRoZSBwbHVnaW4gY2xhc3MuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJQbHVnaW5DbGFzc05hbWU6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBUeXBlOiBUaGUgdHlwZSBvZiB0aGUgcGx1Z2luIGNsYXNzLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyVHlwZTogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFdhc21MYW5ndWFnZTogV2FzbSBsYW5ndWFnZS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0cldhc21MYW5ndWFnZTogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUGFyYW0gc2NvcGUgLSBzY29wZSBpbiB3aGljaCB0aGlzIHJlc291cmNlIGlzIGRlZmluZWRcbiAgICAgKiBQYXJhbSBpZCAgICAtIHNjb3BlZCBpZCBvZiB0aGUgcmVzb3VyY2VcbiAgICAgKiBQYXJhbSBwcm9wcyAtIHJlc291cmNlIHByb3BlcnRpZXNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogcm9zLkNvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IFBsdWdpbkNsYXNzUHJvcHMsIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50OmJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCk7XG4gICAgICAgIHRoaXMuc2NvcGUgPSBzY29wZTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLnByb3BzID0gcHJvcHM7XG4gICAgICAgIHRoaXMuZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgPSBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDtcblxuICAgICAgICBjb25zdCByb3NQbHVnaW5DbGFzcyA9IG5ldyBSb3NQbHVnaW5DbGFzcyh0aGlzLCBpZCwgIHtcbiAgICAgICAgICAgIHdhc21Vcmw6IHByb3BzLndhc21VcmwsXG4gICAgICAgICAgICB2ZXJzaW9uRGVzY3JpcHRpb246IHByb3BzLnZlcnNpb25EZXNjcmlwdGlvbixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBwcm9wcy5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHBsdWdpbkNsYXNzTmFtZTogcHJvcHMucGx1Z2luQ2xhc3NOYW1lLFxuICAgICAgICAgICAgdmVyc2lvbjogcHJvcHMudmVyc2lvbixcbiAgICAgICAgICAgIGFsaWFzOiBwcm9wcy5hbGlhcyxcbiAgICAgICAgICAgIGV4ZWN1dGVQcmlvcml0eTogcHJvcHMuZXhlY3V0ZVByaW9yaXR5LFxuICAgICAgICAgICAgc3VwcG9ydGVkTWluR2F0ZXdheVZlcnNpb246IHByb3BzLnN1cHBvcnRlZE1pbkdhdGV3YXlWZXJzaW9uLFxuICAgICAgICAgICAgd2FzbUxhbmd1YWdlOiBwcm9wcy53YXNtTGFuZ3VhZ2UsXG4gICAgICAgICAgICBleGVjdXRlU3RhZ2U6IHByb3BzLmV4ZWN1dGVTdGFnZSxcbiAgICAgICAgfSwgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgJiYgdGhpcy5zdGFjay5lbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByb3NQbHVnaW5DbGFzcztcbiAgICAgICAgdGhpcy5hdHRyQWxpYXMgPSByb3NQbHVnaW5DbGFzcy5hdHRyQWxpYXM7XG4gICAgICAgIHRoaXMuYXR0ckRlc2NyaXB0aW9uID0gcm9zUGx1Z2luQ2xhc3MuYXR0ckRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmF0dHJEb2N1bWVudCA9IHJvc1BsdWdpbkNsYXNzLmF0dHJEb2N1bWVudDtcbiAgICAgICAgdGhpcy5hdHRyUGx1Z2luQ2xhc3NOYW1lID0gcm9zUGx1Z2luQ2xhc3MuYXR0clBsdWdpbkNsYXNzTmFtZTtcbiAgICAgICAgdGhpcy5hdHRyVHlwZSA9IHJvc1BsdWdpbkNsYXNzLmF0dHJUeXBlO1xuICAgICAgICB0aGlzLmF0dHJXYXNtTGFuZ3VhZ2UgPSByb3NQbHVnaW5DbGFzcy5hdHRyV2FzbUxhbmd1YWdlO1xuICAgIH1cbn1cbiJdfQ==