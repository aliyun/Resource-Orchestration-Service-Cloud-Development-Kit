"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SynDb = exports.SynDbProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const clickhouse_generated_1 = require("./clickhouse.generated");
Object.defineProperty(exports, "SynDbProperty", { enumerable: true, get: function () { return clickhouse_generated_1.RosSynDb; } });
/**
 * A ROS resource type:  `ALIYUN::ClickHouse::SynDb`
 */
class SynDb extends ros.Resource {
    /**
     * Create a new `ALIYUN::ClickHouse::SynDb`.
     *
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosSynDb = new clickhouse_generated_1.RosSynDb(this, id, {
            rdsVpcUrl: props.rdsVpcUrl,
            limitUpper: props.limitUpper,
            skipUnsupported: props.skipUnsupported,
            rdsId: props.rdsId,
            rdsPassword: props.rdsPassword,
            rdsUserName: props.rdsUserName,
            ckPassword: props.ckPassword,
            ckUserName: props.ckUserName,
            clickhousePort: props.clickhousePort,
            synDbTables: props.synDbTables,
            dbClusterId: props.dbClusterId,
            rdsPort: props.rdsPort,
            rdsVpcId: props.rdsVpcId,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosSynDb;
        this.attrDbClusterId = rosSynDb.attrDbClusterId;
        this.attrRdsId = rosSynDb.attrRdsId;
        this.attrSynDbs = rosSynDb.attrSynDbs;
    }
}
exports.SynDb = SynDb;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3luZGIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzeW5kYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMsaUVBQWtEO0FBRTdCLDhGQUZaLCtCQUFRLE9BRWlCO0FBeUVsQzs7R0FFRztBQUNILE1BQWEsS0FBTSxTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBc0JuQzs7Ozs7O09BTUc7SUFDSCxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLEtBQWlCLEVBQUUsbUNBQTJDLElBQUk7UUFDNUcsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVqQixNQUFNLFFBQVEsR0FBRyxJQUFJLCtCQUFRLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRztZQUNyQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVM7WUFDMUIsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVO1lBQzVCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtZQUN0QyxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7WUFDbEIsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO1lBQzlCLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztZQUM5QixVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVU7WUFDNUIsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVO1lBQzVCLGNBQWMsRUFBRSxLQUFLLENBQUMsY0FBYztZQUNwQyxXQUFXLEVBQUUsS0FBSyxDQUFDLFdBQVc7WUFDOUIsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO1lBQzlCLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTztZQUN0QixRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7U0FDM0IsRUFBRSxnQ0FBZ0MsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDcEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGVBQWUsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDO1FBQ2hELElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQztRQUNwQyxJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7SUFDMUMsQ0FBQztDQUNKO0FBcERELHNCQW9EQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc1N5bkRiIH0gZnJvbSAnLi9jbGlja2hvdXNlLmdlbmVyYXRlZCc7XG4vLyBHZW5lcmF0ZWQgZnJvbSB0aGUgQWxpQ2xvdWQgUk9TIFJlc291cmNlIFNwZWNpZmljYXRpb25cbmV4cG9ydCB7IFJvc1N5bkRiIGFzIFN5bkRiUHJvcGVydHkgfTtcblxuLyoqXG4gKiBQcm9wZXJ0aWVzIGZvciBkZWZpbmluZyBhIGBBTElZVU46OkNsaWNrSG91c2U6OlN5bkRiYFxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN5bkRiUHJvcHMge1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgY2tQYXNzd29yZDogVGhlIHBhc3N3b3JkIG9mIHRoZSBkYXRhYmFzZSBhY2NvdW50XG4gICAgICovXG4gICAgcmVhZG9ubHkgY2tQYXNzd29yZDogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgY2tVc2VyTmFtZTogVGhlIGFjY291bnQgb2YgdGhlIGNsaWNraG91c2UgZGF0YWJhc2UuXG4gICAgICovXG4gICAgcmVhZG9ubHkgY2tVc2VyTmFtZTogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgZGJDbHVzdGVySWQ6IENsaWNraG91c2UgY2x1c3RlciBpZC5cbiAgICAgKi9cbiAgICByZWFkb25seSBkYkNsdXN0ZXJJZDogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcmRzSWQ6IFRoZSBpbnN0YW5jZSBpZCBvZiBSRFMuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcmRzSWQ6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHJkc1Bhc3N3b3JkOiBUaGUgcGFzc3dvcmQgb2YgdGhlIFJEUyBkYXRhYmFzZSBhY2NvdW50LlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHJkc1Bhc3N3b3JkOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSByZHNVc2VyTmFtZTogVGhlIGFjY291bnQgb2YgdGhlIFJEUyBkYXRhYmFzZS5cbiAgICAgKi9cbiAgICByZWFkb25seSByZHNVc2VyTmFtZTogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgc2tpcFVuc3VwcG9ydGVkOiBTa2lwIHVuc3VwcG9ydGVkIHRhYmxlIG9yIG5vdC5cbiAgICAgKi9cbiAgICByZWFkb25seSBza2lwVW5zdXBwb3J0ZWQ6IGJvb2xlYW4gfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBzeW5EYlRhYmxlczogVGhlIHRhYmxlcyB0byBzeW4uXG4gICAgICovXG4gICAgcmVhZG9ubHkgc3luRGJUYWJsZXM6IEFycmF5PFJvc1N5bkRiLlN5bkRiVGFibGVzUHJvcGVydHkgfCByb3MuSVJlc29sdmFibGU+IHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgY2xpY2tob3VzZVBvcnQ6IFRoZSBwb3J0IG9mIGNsaWNraG91c2UgaWQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgY2xpY2tob3VzZVBvcnQ/OiBudW1iZXIgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBsaW1pdFVwcGVyOiBUaGUgbWF4aW11bSBudW1iZXIgb2Ygcm93cyB0byBzeW5jIHBlciBzZWNvbmQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgbGltaXRVcHBlcj86IG51bWJlciB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHJkc1BvcnQ6IFRoZSBwb3J0IG9mIHJkcy5cbiAgICAgKi9cbiAgICByZWFkb25seSByZHNQb3J0PzogbnVtYmVyIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcmRzVnBjSWQ6IFRoZSB2cGMgb2YgcmRzLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHJkc1ZwY0lkPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcmRzVnBjVXJsOiBJbnRyYW5ldCBhZGRyZXNzIG9mIEFwc2FyYURCIGZvciBSRFMuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcmRzVnBjVXJsPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xufVxuXG4vKipcbiAqIEEgUk9TIHJlc291cmNlIHR5cGU6ICBgQUxJWVVOOjpDbGlja0hvdXNlOjpTeW5EYmBcbiAqL1xuZXhwb3J0IGNsYXNzIFN5bkRiIGV4dGVuZHMgcm9zLlJlc291cmNlIHtcblxuICAgIC8qKlxuICAgICAqIEEgZmFjdG9yeSBtZXRob2QgdGhhdCBjcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIHRoaXMgY2xhc3MgZnJvbSBhbiBvYmplY3RcbiAgICAgKiBjb250YWluaW5nIHRoZSBwcm9wZXJ0aWVzIG9mIHRoaXMgUk9TIHJlc291cmNlLCB3aGljaCB3aWxsIGJlIGFzc2lnbmVkIHRvIFJPUyByZXNvdXJjZS5cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBEYkNsdXN0ZXJJZDogVGhlIGlkIG9mIGNsaWNraG91c2UuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJEYkNsdXN0ZXJJZDogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFJkc0lkOiBUaGUgaWQgb2YgUkRTXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJSZHNJZDogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFN5bkRiczogU3luYyBEYnNcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clN5bkRiczogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBTElZVU46OkNsaWNrSG91c2U6OlN5bkRiYC5cbiAgICAgKlxuICAgICAqIFBhcmFtIHNjb3BlIC0gc2NvcGUgaW4gd2hpY2ggdGhpcyByZXNvdXJjZSBpcyBkZWZpbmVkXG4gICAgICogUGFyYW0gaWQgICAgLSBzY29wZWQgaWQgb2YgdGhlIHJlc291cmNlXG4gICAgICogUGFyYW0gcHJvcHMgLSByZXNvdXJjZSBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IHJvcy5Db25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTeW5EYlByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgICAgIGNvbnN0IHJvc1N5bkRiID0gbmV3IFJvc1N5bkRiKHRoaXMsIGlkLCAge1xuICAgICAgICAgICAgcmRzVnBjVXJsOiBwcm9wcy5yZHNWcGNVcmwsXG4gICAgICAgICAgICBsaW1pdFVwcGVyOiBwcm9wcy5saW1pdFVwcGVyLFxuICAgICAgICAgICAgc2tpcFVuc3VwcG9ydGVkOiBwcm9wcy5za2lwVW5zdXBwb3J0ZWQsXG4gICAgICAgICAgICByZHNJZDogcHJvcHMucmRzSWQsXG4gICAgICAgICAgICByZHNQYXNzd29yZDogcHJvcHMucmRzUGFzc3dvcmQsXG4gICAgICAgICAgICByZHNVc2VyTmFtZTogcHJvcHMucmRzVXNlck5hbWUsXG4gICAgICAgICAgICBja1Bhc3N3b3JkOiBwcm9wcy5ja1Bhc3N3b3JkLFxuICAgICAgICAgICAgY2tVc2VyTmFtZTogcHJvcHMuY2tVc2VyTmFtZSxcbiAgICAgICAgICAgIGNsaWNraG91c2VQb3J0OiBwcm9wcy5jbGlja2hvdXNlUG9ydCxcbiAgICAgICAgICAgIHN5bkRiVGFibGVzOiBwcm9wcy5zeW5EYlRhYmxlcyxcbiAgICAgICAgICAgIGRiQ2x1c3RlcklkOiBwcm9wcy5kYkNsdXN0ZXJJZCxcbiAgICAgICAgICAgIHJkc1BvcnQ6IHByb3BzLnJkc1BvcnQsXG4gICAgICAgICAgICByZHNWcGNJZDogcHJvcHMucmRzVnBjSWQsXG4gICAgICAgIH0sIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50ICYmIHRoaXMuc3RhY2suZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQpO1xuICAgICAgICB0aGlzLnJlc291cmNlID0gcm9zU3luRGI7XG4gICAgICAgIHRoaXMuYXR0ckRiQ2x1c3RlcklkID0gcm9zU3luRGIuYXR0ckRiQ2x1c3RlcklkO1xuICAgICAgICB0aGlzLmF0dHJSZHNJZCA9IHJvc1N5bkRiLmF0dHJSZHNJZDtcbiAgICAgICAgdGhpcy5hdHRyU3luRGJzID0gcm9zU3luRGIuYXR0clN5bkRicztcbiAgICB9XG59XG4iXX0=