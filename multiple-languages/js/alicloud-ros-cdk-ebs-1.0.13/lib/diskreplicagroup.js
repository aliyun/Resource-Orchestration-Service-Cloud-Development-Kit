"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiskReplicaGroup = exports.DiskReplicaGroupProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const ebs_generated_1 = require("./ebs.generated");
Object.defineProperty(exports, "DiskReplicaGroupProperty", { enumerable: true, get: function () { return ebs_generated_1.RosDiskReplicaGroup; } });
/**
 * A ROS resource type:  `ALIYUN::EBS::DiskReplicaGroup`
 */
class DiskReplicaGroup extends ros.Resource {
    /**
     * Create a new `ALIYUN::EBS::DiskReplicaGroup`.
     *
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosDiskReplicaGroup = new ebs_generated_1.RosDiskReplicaGroup(this, id, {
            rpo: props.rpo,
            sourceRegionId: props.sourceRegionId,
            description: props.description,
            diskReplicaGroupName: props.diskReplicaGroupName,
            resourceGroupId: props.resourceGroupId,
            destinationRegionId: props.destinationRegionId,
            destinationZoneId: props.destinationZoneId,
            sourceZoneId: props.sourceZoneId,
            tags: props.tags,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosDiskReplicaGroup;
        this.attrDescription = rosDiskReplicaGroup.attrDescription;
        this.attrDestinationRegionId = rosDiskReplicaGroup.attrDestinationRegionId;
        this.attrDestinationZoneId = rosDiskReplicaGroup.attrDestinationZoneId;
        this.attrDiskReplicaGroupName = rosDiskReplicaGroup.attrDiskReplicaGroupName;
        this.attrLastRecoverPoint = rosDiskReplicaGroup.attrLastRecoverPoint;
        this.attrPairIds = rosDiskReplicaGroup.attrPairIds;
        this.attrPairNumber = rosDiskReplicaGroup.attrPairNumber;
        this.attrPrimaryRegion = rosDiskReplicaGroup.attrPrimaryRegion;
        this.attrPrimaryZone = rosDiskReplicaGroup.attrPrimaryZone;
        this.attrRpo = rosDiskReplicaGroup.attrRpo;
        this.attrReplicaGroupId = rosDiskReplicaGroup.attrReplicaGroupId;
        this.attrResourceGroupId = rosDiskReplicaGroup.attrResourceGroupId;
        this.attrSite = rosDiskReplicaGroup.attrSite;
        this.attrSourceRegionId = rosDiskReplicaGroup.attrSourceRegionId;
        this.attrSourceZoneId = rosDiskReplicaGroup.attrSourceZoneId;
        this.attrStandbyRegion = rosDiskReplicaGroup.attrStandbyRegion;
        this.attrStandbyZone = rosDiskReplicaGroup.attrStandbyZone;
        this.attrTags = rosDiskReplicaGroup.attrTags;
    }
}
exports.DiskReplicaGroup = DiskReplicaGroup;
//# sourceMappingURL=data:application/json;base64,