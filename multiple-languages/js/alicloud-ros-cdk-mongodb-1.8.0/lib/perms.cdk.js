"use strict";
/**
 * According to https://help.aliyun.com/mongodb/developer-reference/api-dds-2015-12-01-ram
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MONGODB_INSTANCE_LIST_ACTIONS = exports.MONGODB_INSTANCE_DELETE_ACTIONS = exports.MONGODB_INSTANCE_UPDATE_ACTIONS = exports.MONGODB_INSTANCE_CREATE_ACTIONS = exports.MONGODB_INSTANCE_GET_ACTIONS = void 0;
exports.MONGODB_INSTANCE_GET_ACTIONS = [
    'dds:DescribeUserEncryptionKeyList',
    'dds:DescribeMongoDBLogConfig',
    'dds:DescribeAccounts',
    'dds:CheckRecoveryCondition',
    'dds:DescribeParameters',
    'dds:DescribeActiveOperationTaskType',
    'dds:DescribeSecurityIps',
    'dds:DescribeRunningLogRecords',
    'dds:DescribeAuditRecords',
    'dds:DescribeSlowLogRecords',
    'dds:DescribeDBInstances',
    'dds:DescribeBackupDBs',
    'dds:DescribeReplicaSetRole',
    'dds:DescribeAvailableResource',
    'dds:DescribeBackupStorage',
    'dds:DescribeDBInstanceTDEInfo',
    'dds:DescribeTags',
    'dds:CheckCloudResourceAuthorized',
    'dds:DescribeDBInstanceMonitor',
    'dds:DescribeClusterBackups',
    'dds:DescribeActiveOperationTaskCount',
    'dds:DescribeDBInstanceEncryptionKey',
    'dds:DescribeRenewalPrice',
    'dds:DescribeRoleZoneInfo',
    'dds:DescribeKmsKeys',
    'dds:DescribeErrorLogRecords',
    'dds:DescribeGlobalSecurityIPGroupRelation',
    'dds:DescribeDBInstancePerformance',
    'dds:DescribeBackupPolicy',
    'dds:DescribeParameterModificationHistory',
    'dds:DescribeInstanceAutoRenewalAttribute',
    'dds:DescribeDBInstanceSSL',
    'dds:DescribeAvailableEngineVersion',
    'dds:DescribeBackups',
    'dds:DescribeAuditPolicy',
    'dds:DescribeAuditLogFilter',
    'dds:DescribeSecurityGroupConfiguration',
    'dds:DescribePrice',
    'dds:ListTagResources',
    'dds:DescribeDBInstancesOverview',
    'dds:DescribeClusterRecoverTime',
    'dds:DescribeShardingNetworkAddress',
    'dds:DescribeDBInstanceAttribute',
];
exports.MONGODB_INSTANCE_CREATE_ACTIONS = [
    'dds:CreateAccount',
    'dds:CreateShardingDBInstance',
    'dds:CreateNodeBatch',
    'dds:CreateGlobalSecurityIPGroup',
    'dds:CreateBackup',
    'dds:CreateDBInstance',
    'dds:CreateNode',
];
exports.MONGODB_INSTANCE_UPDATE_ACTIONS = [
    'dds:ModifyResourceGroup',
    'dds:ReleaseNodePrivateNetworkAddress',
    'dds:AllocateNodePrivateNetworkAddress',
    'dds:ModifyDBInstanceMonitor',
    'dds:ModifyTaskInfo',
    'dds:ReleasePublicNetworkAddress',
    'dds:ModifyDBInstanceNetworkType',
    'dds:RenewDBInstance',
    'dds:ModifyNodeSpec',
    'dds:UpgradeDBInstanceEngineVersion',
    'dds:ModifySecurityGroupConfiguration',
    'dds:ModifyGlobalSecurityIPGroupRelation',
    'dds:AllocatePublicNetworkAddress',
    'dds:ModifyDBInstanceMaintainTime',
    'dds:ModifyNodeSpecBatch',
    'dds:TransformToPrePaid',
    'dds:ModifySecurityIps',
    'dds:RestartNode',
    'dds:MigrateToOtherZone',
    'dds:ModifyAuditLogFilter',
    'dds:ResetAccountPassword',
    'dds:ModifyDBInstanceConnectionString',
    'dds:ModifyAccountDescription',
    'dds:TagResources',
    'dds:ModifyDBInstanceDescription',
    'dds:ModifyDBInstanceDiskType',
    'dds:ModifyDBInstanceSpec',
    'dds:ModifyBackupPolicy',
    'dds:ModifyDBInstanceSSL',
    'dds:TransformInstanceChargeType',
    'dds:ModifyDBInstanceTDE',
    'dds:RestartDBInstance',
    'dds:ModifyGlobalSecurityIPGroup',
    'dds:ModifyDBInstanceNetExpireTime',
    'dds:ModifyGlobalSecurityIPGroupName',
    'dds:UntagResources',
    'dds:ModifyInstanceAutoRenewalAttribute',
    'dds:MigrateAvailableZone',
    'dds:ModifyInstanceVpcAuthMode',
    'dds:UpgradeDBInstanceKernelVersion',
    'dds:ModifyAuditPolicy',
    'dds:ModifyParameters',
];
exports.MONGODB_INSTANCE_DELETE_ACTIONS = [
    'dds:DeleteGlobalSecurityIPGroup',
    'dds:DestroyInstance',
    'dds:DeleteDBInstance',
    'dds:DeleteNode',
];
exports.MONGODB_INSTANCE_LIST_ACTIONS = [
    'dds:DescribeActiveOperationTasks',
    'dds:DescribeHistoryTasks',
    'dds:DescribeAvailabilityZones',
    'dds:DescribeDBInstanceSwitchLog',
    'dds:DescribeGlobalSecurityIPGroup',
    'dds:DescribeHistoryTasksStat',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybXMuY2RrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGVybXMuY2RrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7O0FBRVUsUUFBQSw0QkFBNEIsR0FBRztJQUN4QyxtQ0FBbUM7SUFDbkMsOEJBQThCO0lBQzlCLHNCQUFzQjtJQUN0Qiw0QkFBNEI7SUFDNUIsd0JBQXdCO0lBQ3hCLHFDQUFxQztJQUNyQyx5QkFBeUI7SUFDekIsK0JBQStCO0lBQy9CLDBCQUEwQjtJQUMxQiw0QkFBNEI7SUFDNUIseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2Qiw0QkFBNEI7SUFDNUIsK0JBQStCO0lBQy9CLDJCQUEyQjtJQUMzQiwrQkFBK0I7SUFDL0Isa0JBQWtCO0lBQ2xCLGtDQUFrQztJQUNsQywrQkFBK0I7SUFDL0IsNEJBQTRCO0lBQzVCLHNDQUFzQztJQUN0QyxxQ0FBcUM7SUFDckMsMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQixxQkFBcUI7SUFDckIsNkJBQTZCO0lBQzdCLDJDQUEyQztJQUMzQyxtQ0FBbUM7SUFDbkMsMEJBQTBCO0lBQzFCLDBDQUEwQztJQUMxQywwQ0FBMEM7SUFDMUMsMkJBQTJCO0lBQzNCLG9DQUFvQztJQUNwQyxxQkFBcUI7SUFDckIseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1Qix3Q0FBd0M7SUFDeEMsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixpQ0FBaUM7SUFDakMsZ0NBQWdDO0lBQ2hDLG9DQUFvQztJQUNwQyxpQ0FBaUM7Q0FDcEMsQ0FBQTtBQUVZLFFBQUEsK0JBQStCLEdBQUc7SUFDM0MsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixxQkFBcUI7SUFDckIsaUNBQWlDO0lBQ2pDLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0NBQ25CLENBQUE7QUFFWSxRQUFBLCtCQUErQixHQUFHO0lBQzNDLHlCQUF5QjtJQUN6QixzQ0FBc0M7SUFDdEMsdUNBQXVDO0lBQ3ZDLDZCQUE2QjtJQUM3QixvQkFBb0I7SUFDcEIsaUNBQWlDO0lBQ2pDLGlDQUFpQztJQUNqQyxxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLG9DQUFvQztJQUNwQyxzQ0FBc0M7SUFDdEMseUNBQXlDO0lBQ3pDLGtDQUFrQztJQUNsQyxrQ0FBa0M7SUFDbEMseUJBQXlCO0lBQ3pCLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLHdCQUF3QjtJQUN4QiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLHNDQUFzQztJQUN0Qyw4QkFBOEI7SUFDOUIsa0JBQWtCO0lBQ2xCLGlDQUFpQztJQUNqQyw4QkFBOEI7SUFDOUIsMEJBQTBCO0lBQzFCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsaUNBQWlDO0lBQ2pDLHlCQUF5QjtJQUN6Qix1QkFBdUI7SUFDdkIsaUNBQWlDO0lBQ2pDLG1DQUFtQztJQUNuQyxxQ0FBcUM7SUFDckMsb0JBQW9CO0lBQ3BCLHdDQUF3QztJQUN4QywwQkFBMEI7SUFDMUIsK0JBQStCO0lBQy9CLG9DQUFvQztJQUNwQyx1QkFBdUI7SUFDdkIsc0JBQXNCO0NBQ3pCLENBQUE7QUFFWSxRQUFBLCtCQUErQixHQUFHO0lBQzNDLGlDQUFpQztJQUNqQyxxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtDQUNuQixDQUFBO0FBRVksUUFBQSw2QkFBNkIsR0FBRztJQUN6QyxrQ0FBa0M7SUFDbEMsMEJBQTBCO0lBQzFCLCtCQUErQjtJQUMvQixpQ0FBaUM7SUFDakMsbUNBQW1DO0lBQ25DLDhCQUE4QjtDQUNqQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBY2NvcmRpbmcgdG8gaHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20vbW9uZ29kYi9kZXZlbG9wZXItcmVmZXJlbmNlL2FwaS1kZHMtMjAxNS0xMi0wMS1yYW1cbiAqL1xuXG5leHBvcnQgY29uc3QgTU9OR09EQl9JTlNUQU5DRV9HRVRfQUNUSU9OUyA9IFtcbiAgICAnZGRzOkRlc2NyaWJlVXNlckVuY3J5cHRpb25LZXlMaXN0JyxcbiAgICAnZGRzOkRlc2NyaWJlTW9uZ29EQkxvZ0NvbmZpZycsXG4gICAgJ2RkczpEZXNjcmliZUFjY291bnRzJyxcbiAgICAnZGRzOkNoZWNrUmVjb3ZlcnlDb25kaXRpb24nLFxuICAgICdkZHM6RGVzY3JpYmVQYXJhbWV0ZXJzJyxcbiAgICAnZGRzOkRlc2NyaWJlQWN0aXZlT3BlcmF0aW9uVGFza1R5cGUnLFxuICAgICdkZHM6RGVzY3JpYmVTZWN1cml0eUlwcycsXG4gICAgJ2RkczpEZXNjcmliZVJ1bm5pbmdMb2dSZWNvcmRzJyxcbiAgICAnZGRzOkRlc2NyaWJlQXVkaXRSZWNvcmRzJyxcbiAgICAnZGRzOkRlc2NyaWJlU2xvd0xvZ1JlY29yZHMnLFxuICAgICdkZHM6RGVzY3JpYmVEQkluc3RhbmNlcycsXG4gICAgJ2RkczpEZXNjcmliZUJhY2t1cERCcycsXG4gICAgJ2RkczpEZXNjcmliZVJlcGxpY2FTZXRSb2xlJyxcbiAgICAnZGRzOkRlc2NyaWJlQXZhaWxhYmxlUmVzb3VyY2UnLFxuICAgICdkZHM6RGVzY3JpYmVCYWNrdXBTdG9yYWdlJyxcbiAgICAnZGRzOkRlc2NyaWJlREJJbnN0YW5jZVRERUluZm8nLFxuICAgICdkZHM6RGVzY3JpYmVUYWdzJyxcbiAgICAnZGRzOkNoZWNrQ2xvdWRSZXNvdXJjZUF1dGhvcml6ZWQnLFxuICAgICdkZHM6RGVzY3JpYmVEQkluc3RhbmNlTW9uaXRvcicsXG4gICAgJ2RkczpEZXNjcmliZUNsdXN0ZXJCYWNrdXBzJyxcbiAgICAnZGRzOkRlc2NyaWJlQWN0aXZlT3BlcmF0aW9uVGFza0NvdW50JyxcbiAgICAnZGRzOkRlc2NyaWJlREJJbnN0YW5jZUVuY3J5cHRpb25LZXknLFxuICAgICdkZHM6RGVzY3JpYmVSZW5ld2FsUHJpY2UnLFxuICAgICdkZHM6RGVzY3JpYmVSb2xlWm9uZUluZm8nLFxuICAgICdkZHM6RGVzY3JpYmVLbXNLZXlzJyxcbiAgICAnZGRzOkRlc2NyaWJlRXJyb3JMb2dSZWNvcmRzJyxcbiAgICAnZGRzOkRlc2NyaWJlR2xvYmFsU2VjdXJpdHlJUEdyb3VwUmVsYXRpb24nLFxuICAgICdkZHM6RGVzY3JpYmVEQkluc3RhbmNlUGVyZm9ybWFuY2UnLFxuICAgICdkZHM6RGVzY3JpYmVCYWNrdXBQb2xpY3knLFxuICAgICdkZHM6RGVzY3JpYmVQYXJhbWV0ZXJNb2RpZmljYXRpb25IaXN0b3J5JyxcbiAgICAnZGRzOkRlc2NyaWJlSW5zdGFuY2VBdXRvUmVuZXdhbEF0dHJpYnV0ZScsXG4gICAgJ2RkczpEZXNjcmliZURCSW5zdGFuY2VTU0wnLFxuICAgICdkZHM6RGVzY3JpYmVBdmFpbGFibGVFbmdpbmVWZXJzaW9uJyxcbiAgICAnZGRzOkRlc2NyaWJlQmFja3VwcycsXG4gICAgJ2RkczpEZXNjcmliZUF1ZGl0UG9saWN5JyxcbiAgICAnZGRzOkRlc2NyaWJlQXVkaXRMb2dGaWx0ZXInLFxuICAgICdkZHM6RGVzY3JpYmVTZWN1cml0eUdyb3VwQ29uZmlndXJhdGlvbicsXG4gICAgJ2RkczpEZXNjcmliZVByaWNlJyxcbiAgICAnZGRzOkxpc3RUYWdSZXNvdXJjZXMnLFxuICAgICdkZHM6RGVzY3JpYmVEQkluc3RhbmNlc092ZXJ2aWV3JyxcbiAgICAnZGRzOkRlc2NyaWJlQ2x1c3RlclJlY292ZXJUaW1lJyxcbiAgICAnZGRzOkRlc2NyaWJlU2hhcmRpbmdOZXR3b3JrQWRkcmVzcycsXG4gICAgJ2RkczpEZXNjcmliZURCSW5zdGFuY2VBdHRyaWJ1dGUnLFxuXVxuXG5leHBvcnQgY29uc3QgTU9OR09EQl9JTlNUQU5DRV9DUkVBVEVfQUNUSU9OUyA9IFtcbiAgICAnZGRzOkNyZWF0ZUFjY291bnQnLFxuICAgICdkZHM6Q3JlYXRlU2hhcmRpbmdEQkluc3RhbmNlJyxcbiAgICAnZGRzOkNyZWF0ZU5vZGVCYXRjaCcsXG4gICAgJ2RkczpDcmVhdGVHbG9iYWxTZWN1cml0eUlQR3JvdXAnLFxuICAgICdkZHM6Q3JlYXRlQmFja3VwJyxcbiAgICAnZGRzOkNyZWF0ZURCSW5zdGFuY2UnLFxuICAgICdkZHM6Q3JlYXRlTm9kZScsXG5dXG5cbmV4cG9ydCBjb25zdCBNT05HT0RCX0lOU1RBTkNFX1VQREFURV9BQ1RJT05TID0gW1xuICAgICdkZHM6TW9kaWZ5UmVzb3VyY2VHcm91cCcsXG4gICAgJ2RkczpSZWxlYXNlTm9kZVByaXZhdGVOZXR3b3JrQWRkcmVzcycsXG4gICAgJ2RkczpBbGxvY2F0ZU5vZGVQcml2YXRlTmV0d29ya0FkZHJlc3MnLFxuICAgICdkZHM6TW9kaWZ5REJJbnN0YW5jZU1vbml0b3InLFxuICAgICdkZHM6TW9kaWZ5VGFza0luZm8nLFxuICAgICdkZHM6UmVsZWFzZVB1YmxpY05ldHdvcmtBZGRyZXNzJyxcbiAgICAnZGRzOk1vZGlmeURCSW5zdGFuY2VOZXR3b3JrVHlwZScsXG4gICAgJ2RkczpSZW5ld0RCSW5zdGFuY2UnLFxuICAgICdkZHM6TW9kaWZ5Tm9kZVNwZWMnLFxuICAgICdkZHM6VXBncmFkZURCSW5zdGFuY2VFbmdpbmVWZXJzaW9uJyxcbiAgICAnZGRzOk1vZGlmeVNlY3VyaXR5R3JvdXBDb25maWd1cmF0aW9uJyxcbiAgICAnZGRzOk1vZGlmeUdsb2JhbFNlY3VyaXR5SVBHcm91cFJlbGF0aW9uJyxcbiAgICAnZGRzOkFsbG9jYXRlUHVibGljTmV0d29ya0FkZHJlc3MnLFxuICAgICdkZHM6TW9kaWZ5REJJbnN0YW5jZU1haW50YWluVGltZScsXG4gICAgJ2RkczpNb2RpZnlOb2RlU3BlY0JhdGNoJyxcbiAgICAnZGRzOlRyYW5zZm9ybVRvUHJlUGFpZCcsXG4gICAgJ2RkczpNb2RpZnlTZWN1cml0eUlwcycsXG4gICAgJ2RkczpSZXN0YXJ0Tm9kZScsXG4gICAgJ2RkczpNaWdyYXRlVG9PdGhlclpvbmUnLFxuICAgICdkZHM6TW9kaWZ5QXVkaXRMb2dGaWx0ZXInLFxuICAgICdkZHM6UmVzZXRBY2NvdW50UGFzc3dvcmQnLFxuICAgICdkZHM6TW9kaWZ5REJJbnN0YW5jZUNvbm5lY3Rpb25TdHJpbmcnLFxuICAgICdkZHM6TW9kaWZ5QWNjb3VudERlc2NyaXB0aW9uJyxcbiAgICAnZGRzOlRhZ1Jlc291cmNlcycsXG4gICAgJ2RkczpNb2RpZnlEQkluc3RhbmNlRGVzY3JpcHRpb24nLFxuICAgICdkZHM6TW9kaWZ5REJJbnN0YW5jZURpc2tUeXBlJyxcbiAgICAnZGRzOk1vZGlmeURCSW5zdGFuY2VTcGVjJyxcbiAgICAnZGRzOk1vZGlmeUJhY2t1cFBvbGljeScsXG4gICAgJ2RkczpNb2RpZnlEQkluc3RhbmNlU1NMJyxcbiAgICAnZGRzOlRyYW5zZm9ybUluc3RhbmNlQ2hhcmdlVHlwZScsXG4gICAgJ2RkczpNb2RpZnlEQkluc3RhbmNlVERFJyxcbiAgICAnZGRzOlJlc3RhcnREQkluc3RhbmNlJyxcbiAgICAnZGRzOk1vZGlmeUdsb2JhbFNlY3VyaXR5SVBHcm91cCcsXG4gICAgJ2RkczpNb2RpZnlEQkluc3RhbmNlTmV0RXhwaXJlVGltZScsXG4gICAgJ2RkczpNb2RpZnlHbG9iYWxTZWN1cml0eUlQR3JvdXBOYW1lJyxcbiAgICAnZGRzOlVudGFnUmVzb3VyY2VzJyxcbiAgICAnZGRzOk1vZGlmeUluc3RhbmNlQXV0b1JlbmV3YWxBdHRyaWJ1dGUnLFxuICAgICdkZHM6TWlncmF0ZUF2YWlsYWJsZVpvbmUnLFxuICAgICdkZHM6TW9kaWZ5SW5zdGFuY2VWcGNBdXRoTW9kZScsXG4gICAgJ2RkczpVcGdyYWRlREJJbnN0YW5jZUtlcm5lbFZlcnNpb24nLFxuICAgICdkZHM6TW9kaWZ5QXVkaXRQb2xpY3knLFxuICAgICdkZHM6TW9kaWZ5UGFyYW1ldGVycycsXG5dXG5cbmV4cG9ydCBjb25zdCBNT05HT0RCX0lOU1RBTkNFX0RFTEVURV9BQ1RJT05TID0gW1xuICAgICdkZHM6RGVsZXRlR2xvYmFsU2VjdXJpdHlJUEdyb3VwJyxcbiAgICAnZGRzOkRlc3Ryb3lJbnN0YW5jZScsXG4gICAgJ2RkczpEZWxldGVEQkluc3RhbmNlJyxcbiAgICAnZGRzOkRlbGV0ZU5vZGUnLFxuXVxuXG5leHBvcnQgY29uc3QgTU9OR09EQl9JTlNUQU5DRV9MSVNUX0FDVElPTlMgPSBbXG4gICAgJ2RkczpEZXNjcmliZUFjdGl2ZU9wZXJhdGlvblRhc2tzJyxcbiAgICAnZGRzOkRlc2NyaWJlSGlzdG9yeVRhc2tzJyxcbiAgICAnZGRzOkRlc2NyaWJlQXZhaWxhYmlsaXR5Wm9uZXMnLFxuICAgICdkZHM6RGVzY3JpYmVEQkluc3RhbmNlU3dpdGNoTG9nJyxcbiAgICAnZGRzOkRlc2NyaWJlR2xvYmFsU2VjdXJpdHlJUEdyb3VwJyxcbiAgICAnZGRzOkRlc2NyaWJlSGlzdG9yeVRhc2tzU3RhdCcsXG5dIl19