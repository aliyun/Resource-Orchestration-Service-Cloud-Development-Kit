"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instance = exports.InstanceProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const kafka_generated_1 = require("./kafka.generated");
Object.defineProperty(exports, "InstanceProperty", { enumerable: true, get: function () { return kafka_generated_1.RosInstance; } });
/**
 * This class encapsulates and extends the ROS resource type `DATASOURCE::KAFKA::Instance`.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosInstance`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/datasource-kafka-instance
 */
class Instance extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosInstance = new kafka_generated_1.RosInstance(this, id, {
            instanceId: props.instanceId,
            refreshOptions: props.refreshOptions === undefined || props.refreshOptions === null ? 'Never' : props.refreshOptions,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosInstance;
        this.attrAllConfig = rosInstance.attrAllConfig;
        this.attrAllowedList = rosInstance.attrAllowedList;
        this.attrCreateTime = rosInstance.attrCreateTime;
        this.attrDeployType = rosInstance.attrDeployType;
        this.attrDiskSize = rosInstance.attrDiskSize;
        this.attrDiskType = rosInstance.attrDiskType;
        this.attrDomainEndpoint = rosInstance.attrDomainEndpoint;
        this.attrEipMax = rosInstance.attrEipMax;
        this.attrEndPoint = rosInstance.attrEndPoint;
        this.attrExpiredTime = rosInstance.attrExpiredTime;
        this.attrInstanceId = rosInstance.attrInstanceId;
        this.attrInstanceName = rosInstance.attrInstanceName;
        this.attrIoMax = rosInstance.attrIoMax;
        this.attrIoMaxSpec = rosInstance.attrIoMaxSpec;
        this.attrMsgRetain = rosInstance.attrMsgRetain;
        this.attrPaymentType = rosInstance.attrPaymentType;
        this.attrResourceGroupId = rosInstance.attrResourceGroupId;
        this.attrSaslDomainEndpoint = rosInstance.attrSaslDomainEndpoint;
        this.attrServiceVersion = rosInstance.attrServiceVersion;
        this.attrSpecType = rosInstance.attrSpecType;
        this.attrSslDomainEndpoint = rosInstance.attrSslDomainEndpoint;
        this.attrSslEndPoint = rosInstance.attrSslEndPoint;
        this.attrTags = rosInstance.attrTags;
        this.attrTopicNumLimit = rosInstance.attrTopicNumLimit;
        this.attrVSwitchId = rosInstance.attrVSwitchId;
        this.attrVpcId = rosInstance.attrVpcId;
        this.attrZoneId = rosInstance.attrZoneId;
    }
}
exports.Instance = Instance;
//# sourceMappingURL=data:application/json;base64,