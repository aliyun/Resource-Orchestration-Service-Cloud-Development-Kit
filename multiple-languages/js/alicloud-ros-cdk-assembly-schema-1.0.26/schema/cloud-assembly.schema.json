{
    "$ref": "#/definitions/AssemblyManifest",
    "definitions": {
        "AssemblyManifest": {
            "description": "A manifest which describes the cloud assembly.",
            "type": "object",
            "properties": {
                "version": {
                    "description": "Protocol version",
                    "type": "string"
                },
                "artifacts": {
                    "description": "The set of artifacts in this assembly. (Default - no artifacts.)",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactManifest"
                    }
                },
                "missing": {
                    "description": "Missing context information. If this field has values, it means that the\ncloud assembly is not complete and should not be deployed. (Default - no missing context.)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MissingContext"
                    }
                },
                "runtime": {
                    "description": "Runtime information. (Default - no info.)",
                    "$ref": "#/definitions/RuntimeInfo"
                }
            },
            "required": [
                "version"
            ]
        },
        "ArtifactManifest": {
            "description": "A manifest for a single artifact within the cloud assembly.",
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/ArtifactType",
                    "description": "The type of artifact."
                },
                "metadata": {
                    "description": "Associated metadata. (Default - no metadata.)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/MetadataEntry"
                        }
                    }
                },
                "dependencies": {
                    "description": "IDs of artifacts that must be deployed before this artifact. (Default - no dependencies.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "properties": {
                    "description": "The set of properties for this artifact (depends on type) (Default - no properties.)",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AliyunRosStackProperties"
                        },
                        {
                            "$ref": "#/definitions/TreeArtifactProperties"
                        },
                        {
                            "$ref": "#/definitions/NestedCloudAssemblyProperties"
                        }
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "ArtifactType": {
            "description": "Type of cloud artifact.",
            "enum": [
                "aliyun:ros:stack",
                "cdk:cloud-assembly",
                "cdk:tree",
                "none"
            ],
            "type": "string"
        },
        "MetadataEntry": {
            "description": "A metadata entry in a cloud assembly artifact.",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of the metadata entry.",
                    "type": "string"
                },
                "data": {
                    "description": "The data. (Default - no data.)",
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Tag"
                            }
                        },
                        {
                            "type": "string"
                        },
                        {
                            "description": "Free form data."
                        }
                    ]
                },
                "trace": {
                    "description": "A stack trace for when the entry was created. (Default - no trace.)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "type"
            ]
        },
        "Tag": {
            "description": "Metadata Entry spec for stack tag.",
            "type": "object",
            "properties": {
                "key": {
                    "description": "Tag key.",
                    "type": "string"
                },
                "value": {
                    "description": "Tag value.",
                    "type": "string"
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "AliyunRosStackProperties": {
            "description": "Artifact properties for ROS stacks.",
            "type": "object",
            "properties": {
                "templateFile": {
                    "description": "A file relative to the assembly root which contains the ROS template for this stack.",
                    "type": "string"
                },
                "parameters": {
                    "description": "Values for ROS stack parameters that should be passed when the stack is deployed. (Default - No parameters)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "stackName": {
                    "description": "The name to use for the ROS stack. (Default - name derived from artifact ID)",
                    "type": "string"
                },
                "tags": {
                    "description": "Values for ROS stack tags that should be passed when the stack is deployed. (Default - No tags)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "templateFile"
            ]
        },
        "TreeArtifactProperties": {
            "description": "Artifact properties for the Construct Tree Artifact",
            "type": "object",
            "properties": {
                "file": {
                    "description": "Filename of the tree artifact",
                    "type": "string"
                }
            },
            "required": [
                "file"
            ]
        },
        "NestedCloudAssemblyProperties": {
            "description": "Artifact properties for nested cloud assemblies",
            "type": "object",
            "properties": {
                "directoryName": {
                    "description": "Relative path to the nested cloud assembly",
                    "type": "string"
                },
                "displayName": {
                    "description": "Display name for the cloud assembly (Default - The artifact ID)",
                    "type": "string"
                }
            },
            "required": [
                "directoryName"
            ]
        },
        "MissingContext": {
            "description": "Represents a missing piece of context.",
            "type": "object",
            "properties": {
                "key": {
                    "description": "The missing context key.",
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/ContextProvider",
                    "description": "The provider from which we expect this context key to be obtained."
                },
                "props": {
                    "description": "A set of provider-specific options.",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AmiContextQuery"
                        },
                        {
                            "$ref": "#/definitions/AvailabilityZonesContextQuery"
                        },
                        {
                            "$ref": "#/definitions/HostedZoneContextQuery"
                        },
                        {
                            "$ref": "#/definitions/SSMParameterContextQuery"
                        },
                        {
                            "$ref": "#/definitions/VpcContextQuery"
                        },
                        {
                            "$ref": "#/definitions/EndpointServiceAvailabilityZonesContextQuery"
                        }
                    ]
                }
            },
            "required": [
                "key",
                "props",
                "provider"
            ]
        },
        "ContextProvider": {
            "description": "Identifier for the context provider",
            "enum": [
                "ami",
                "availability-zones",
                "endpoint-service-availability-zones",
                "hosted-zone",
                "ssm",
                "vpc-provider"
            ],
            "type": "string"
        },
        "AmiContextQuery": {
            "description": "Query to AMI context provider",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Account to query",
                    "type": "string"
                },
                "region": {
                    "description": "Region to query",
                    "type": "string"
                },
                "owners": {
                    "description": "Owners to DescribeImages call (Default - All owners)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "description": "Filters to DescribeImages call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "account",
                "filters",
                "region"
            ]
        },
        "AvailabilityZonesContextQuery": {
            "description": "Query to availability zone context provider",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Query account",
                    "type": "string"
                },
                "region": {
                    "description": "Query region",
                    "type": "string"
                }
            },
            "required": [
                "account",
                "region"
            ]
        },
        "HostedZoneContextQuery": {
            "description": "Query to hosted zone context provider",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Query account",
                    "type": "string"
                },
                "region": {
                    "description": "Query region",
                    "type": "string"
                },
                "domainName": {
                    "description": "The domain name e.g. example.com to lookup",
                    "type": "string"
                },
                "privateZone": {
                    "description": "True if the zone you want to find is a private hosted zone",
                    "default": false,
                    "type": "boolean"
                },
                "vpcId": {
                    "description": "The VPC ID to that the private zone must be associated with\n\nIf you provide VPC ID and privateZone is false, this will return no results\nand raise an error. (Default - Required if privateZone=true)",
                    "type": "string"
                }
            },
            "required": [
                "account",
                "domainName",
                "region"
            ]
        },
        "SSMParameterContextQuery": {
            "description": "Query to SSM Parameter Context Provider",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Query account",
                    "type": "string"
                },
                "region": {
                    "description": "Query region",
                    "type": "string"
                },
                "parameterName": {
                    "description": "Parameter name to query",
                    "type": "string"
                }
            },
            "required": [
                "account",
                "parameterName",
                "region"
            ]
        },
        "VpcContextQuery": {
            "description": "Query input for looking up a VPC",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Query account",
                    "type": "string"
                },
                "region": {
                    "description": "Query region",
                    "type": "string"
                },
                "filter": {
                    "description": "Filters to apply to the VPC\n\nFilter parameters are the same as passed to DescribeVpcs.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "returnAsymmetricSubnets": {
                    "description": "Whether to populate the subnetGroups field of the {@link VpcContextResponse},\nwhich contains potentially asymmetric subnet groups.",
                    "default": false,
                    "type": "boolean"
                },
                "subnetGroupNameTag": {
                    "description": "Optional tag for subnet group name.\nIf not provided, we'll look at the ros-cdk:subnet-name tag.\nIf the subnet does not have the specified tag,\nwe'll use its type as the name. (Default 'ros-cdk:subnet-name')",
                    "type": "string"
                }
            },
            "required": [
                "account",
                "filter",
                "region"
            ]
        },
        "EndpointServiceAvailabilityZonesContextQuery": {
            "description": "Query to endpoint service context provider",
            "type": "object",
            "properties": {
                "account": {
                    "description": "Query account",
                    "type": "string"
                },
                "region": {
                    "description": "Query region",
                    "type": "string"
                },
                "serviceName": {
                    "description": "Query service name",
                    "type": "string"
                }
            },
            "required": [
                "account",
                "region",
                "serviceName"
            ]
        },
        "RuntimeInfo": {
            "description": "Information about the application's runtime components.",
            "type": "object",
            "properties": {
                "libraries": {
                    "description": "The list of libraries loaded in the application, associated with their versions.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "libraries"
            ]
        }
    },
    "$schema": "http://json-schema.org/draft-07/schema#"
}