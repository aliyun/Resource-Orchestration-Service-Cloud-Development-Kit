"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RouteTableWithGatewayAssociation = exports.RouteTableWithGatewayAssociationProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const vpc_generated_1 = require("./vpc.generated");
Object.defineProperty(exports, "RouteTableWithGatewayAssociationProperty", { enumerable: true, get: function () { return vpc_generated_1.RosRouteTableWithGatewayAssociation; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::VPC::RouteTableWithGatewayAssociation`.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosRouteTableWithGatewayAssociation`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-vpc-routetablewithgatewayassociation
 */
class RouteTableWithGatewayAssociation extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosRouteTableWithGatewayAssociation = new vpc_generated_1.RosRouteTableWithGatewayAssociation(this, id, {
            routeTableId: props.routeTableId,
            gatewayType: props.gatewayType,
            gatewayId: props.gatewayId,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosRouteTableWithGatewayAssociation;
        this.attrGatewayId = rosRouteTableWithGatewayAssociation.attrGatewayId;
        this.attrRouteTableId = rosRouteTableWithGatewayAssociation.attrRouteTableId;
    }
}
exports.RouteTableWithGatewayAssociation = RouteTableWithGatewayAssociation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGV0YWJsZXdpdGhnYXRld2F5YXNzb2NpYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3V0ZXRhYmxld2l0aGdhdGV3YXlhc3NvY2lhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMsbURBQXNFO0FBRXRCLHlIQUZ2QyxtREFBbUMsT0FFNEM7QUF5Q3hGOzs7O0dBSUc7QUFDSCxNQUFhLGdDQUFpQyxTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBZ0I5RDs7OztPQUlHO0lBQ0gsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUE0QyxFQUFFLG1DQUEyQyxJQUFJO1FBQ3ZJLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsZ0NBQWdDLEdBQUcsZ0NBQWdDLENBQUM7UUFFekUsTUFBTSxtQ0FBbUMsR0FBRyxJQUFJLG1EQUFtQyxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUc7WUFDM0YsWUFBWSxFQUFFLEtBQUssQ0FBQyxZQUFZO1lBQ2hDLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztZQUM5QixTQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVM7U0FDN0IsRUFBRSxnQ0FBZ0MsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDcEYsSUFBSSxDQUFDLFFBQVEsR0FBRyxtQ0FBbUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsYUFBYSxHQUFHLG1DQUFtQyxDQUFDLGFBQWEsQ0FBQztRQUN2RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsbUNBQW1DLENBQUMsZ0JBQWdCLENBQUM7SUFDakYsQ0FBQztDQUNKO0FBckNELDRFQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc1JvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uIH0gZnJvbSAnLi92cGMuZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zUm91dGVUYWJsZVdpdGhHYXRld2F5QXNzb2NpYXRpb24gYXMgUm91dGVUYWJsZVdpdGhHYXRld2F5QXNzb2NpYXRpb25Qcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYFJvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLXZwYy1yb3V0ZXRhYmxld2l0aGdhdGV3YXlhc3NvY2lhdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uUHJvcHMge1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgZ2F0ZXdheUlkOiBUaGUgSUQgb2YgdGhlIElQdjQgZ2F0ZXdheSB0aGF0IGlzIHRvIGJlIGFzc29jaWF0ZWQuXG4gICAgICogVGhlIElQdjQgZ2F0ZXdheSBpbnN0YW5jZSBtdXN0IGJlIGFjdGl2YXRlZC5cbiAgICAgKi9cbiAgICByZWFkb25seSBnYXRld2F5SWQ6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGdhdGV3YXlUeXBlOiBUeXBlcyBvZiB0aGUgYXNzb2NpYXRlZCBnYXRld2F5IGluc3RhbmNlLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGdhdGV3YXlUeXBlOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSByb3V0ZVRhYmxlSWQ6IFRoZSBJRCBvZiByb3V0ZSB0YWJsZSB0aGF0IGdhdGV3YXkgaXMgdG8gYmUgYm91bmQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcm91dGVUYWJsZUlkOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG59XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGBSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvbmAuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVJvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uIGV4dGVuZHMgcm9zLklSZXNvdXJjZSB7XG4gICAgcmVhZG9ubHkgcHJvcHM6IFJvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uUHJvcHM7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgR2F0ZXdheUlkOiBUaGUgSUQgb2YgdGhlIElQdjQgZ2F0ZXdheSB0aGF0IGlzIHRvIGJlIGFzc29jaWF0ZWQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgYXR0ckdhdGV3YXlJZDogcm9zLklSZXNvbHZhYmxlIHwgc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFJvdXRlVGFibGVJZDogVGhlIElEIG9mIHJvdXRlIHRhYmxlIHRoYXQgZ2F0ZXdheSBpcyB0byBiZSBib3VuZC5cbiAgICAgKi9cbiAgICByZWFkb25seSBhdHRyUm91dGVUYWJsZUlkOiByb3MuSVJlc29sdmFibGUgfCBzdHJpbmc7XG59XG4vKipcbiAqIFRoaXMgY2xhc3MgZW5jYXBzdWxhdGVzIGFuZCBleHRlbmRzIHRoZSBST1MgcmVzb3VyY2UgdHlwZSBgQUxJWVVOOjpWUEM6OlJvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uYC5cbiAqIEBOb3RlIFRoaXMgY2xhc3MgbWF5IGhhdmUgc29tZSBuZXcgZnVuY3Rpb25zIHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQsIHNvIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNsYXNzIGluc3RlYWQgb2YgYFJvc1JvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uYGZvciBhIG1vcmUgY29udmVuaWVudCBkZXZlbG9wbWVudCBleHBlcmllbmNlLlxuICogU2VlIGh0dHBzOi8vd3d3LmFsaWJhYmFjbG91ZC5jb20vaGVscC9yb3MvZGV2ZWxvcGVyLXJlZmVyZW5jZS9hbGl5dW4tdnBjLXJvdXRldGFibGV3aXRoZ2F0ZXdheWFzc29jaWF0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvbiBleHRlbmRzIHJvcy5SZXNvdXJjZSBpbXBsZW1lbnRzIElSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvbiB7XG4gICAgcHJvdGVjdGVkIHNjb3BlOiByb3MuQ29uc3RydWN0O1xuICAgIHByb3RlY3RlZCBpZDogc3RyaW5nO1xuICAgIHB1YmxpYyByZWFkb25seSBwcm9wczogUm91dGVUYWJsZVdpdGhHYXRld2F5QXNzb2NpYXRpb25Qcm9wcztcbiAgICBwcm90ZWN0ZWQgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQ6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgR2F0ZXdheUlkOiBUaGUgSUQgb2YgdGhlIElQdjQgZ2F0ZXdheSB0aGF0IGlzIHRvIGJlIGFzc29jaWF0ZWQuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJHYXRld2F5SWQ6IHJvcy5JUmVzb2x2YWJsZSB8IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBSb3V0ZVRhYmxlSWQ6IFRoZSBJRCBvZiByb3V0ZSB0YWJsZSB0aGF0IGdhdGV3YXkgaXMgdG8gYmUgYm91bmQuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJSb3V0ZVRhYmxlSWQ6IHJvcy5JUmVzb2x2YWJsZSB8IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFBhcmFtIHNjb3BlIC0gc2NvcGUgaW4gd2hpY2ggdGhpcyByZXNvdXJjZSBpcyBkZWZpbmVkXG4gICAgICogUGFyYW0gaWQgICAgLSBzY29wZWQgaWQgb2YgdGhlIHJlc291cmNlXG4gICAgICogUGFyYW0gcHJvcHMgLSByZXNvdXJjZSBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IHJvcy5Db25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvblByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuICAgICAgICB0aGlzLnNjb3BlID0gc2NvcGU7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICAgICAgICB0aGlzLmVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50ID0gZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQ7XG5cbiAgICAgICAgY29uc3Qgcm9zUm91dGVUYWJsZVdpdGhHYXRld2F5QXNzb2NpYXRpb24gPSBuZXcgUm9zUm91dGVUYWJsZVdpdGhHYXRld2F5QXNzb2NpYXRpb24odGhpcywgaWQsICB7XG4gICAgICAgICAgICByb3V0ZVRhYmxlSWQ6IHByb3BzLnJvdXRlVGFibGVJZCxcbiAgICAgICAgICAgIGdhdGV3YXlUeXBlOiBwcm9wcy5nYXRld2F5VHlwZSxcbiAgICAgICAgICAgIGdhdGV3YXlJZDogcHJvcHMuZ2F0ZXdheUlkLFxuICAgICAgICB9LCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCAmJiB0aGlzLnN0YWNrLmVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50KTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IHJvc1JvdXRlVGFibGVXaXRoR2F0ZXdheUFzc29jaWF0aW9uO1xuICAgICAgICB0aGlzLmF0dHJHYXRld2F5SWQgPSByb3NSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvbi5hdHRyR2F0ZXdheUlkO1xuICAgICAgICB0aGlzLmF0dHJSb3V0ZVRhYmxlSWQgPSByb3NSb3V0ZVRhYmxlV2l0aEdhdGV3YXlBc3NvY2lhdGlvbi5hdHRyUm91dGVUYWJsZUlkO1xuICAgIH1cbn1cbiJdfQ==