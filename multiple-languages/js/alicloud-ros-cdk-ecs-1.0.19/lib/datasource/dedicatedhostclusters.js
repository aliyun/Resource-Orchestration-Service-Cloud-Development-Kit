"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DedicatedHostClusters = exports.DedicatedHostClustersProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const ecs_generated_1 = require("./ecs.generated");
Object.defineProperty(exports, "DedicatedHostClustersProperty", { enumerable: true, get: function () { return ecs_generated_1.RosDedicatedHostClusters; } });
/**
 * A ROS resource type:  `DATASOURCE::ECS::DedicatedHostClusters`
 */
class DedicatedHostClusters extends ros.Resource {
    /**
     * Create a new `DATASOURCE::ECS::DedicatedHostClusters`.
     *
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props = {}, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosDedicatedHostClusters = new ecs_generated_1.RosDedicatedHostClusters(this, id, {
            dedicatedHostClusterName: props.dedicatedHostClusterName,
            resourceGroupId: props.resourceGroupId,
            zoneId: props.zoneId,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosDedicatedHostClusters;
        this.attrDedicatedHostClusterIds = rosDedicatedHostClusters.attrDedicatedHostClusterIds;
        this.attrDedicatedHostClusters = rosDedicatedHostClusters.attrDedicatedHostClusters;
    }
}
exports.DedicatedHostClusters = DedicatedHostClusters;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVkaWNhdGVkaG9zdGNsdXN0ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGVkaWNhdGVkaG9zdGNsdXN0ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE4QztBQUM5QyxtREFBMkQ7QUFFdEIsOEdBRjVCLHdDQUF3QixPQUVpQztBQTBCbEU7O0dBRUc7QUFDSCxNQUFhLHFCQUFzQixTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBaUJuRDs7Ozs7O09BTUc7SUFDSCxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLFFBQW9DLEVBQUUsRUFBRSxtQ0FBMkMsSUFBSTtRQUNqSSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLE1BQU0sd0JBQXdCLEdBQUcsSUFBSSx3Q0FBd0IsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFHO1lBQ3JFLHdCQUF3QixFQUFFLEtBQUssQ0FBQyx3QkFBd0I7WUFDeEQsZUFBZSxFQUFFLEtBQUssQ0FBQyxlQUFlO1lBQ3RDLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTTtTQUN2QixFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLHdCQUF3QixDQUFDO1FBQ3pDLElBQUksQ0FBQywyQkFBMkIsR0FBRyx3QkFBd0IsQ0FBQywyQkFBMkIsQ0FBQztRQUN4RixJQUFJLENBQUMseUJBQXlCLEdBQUcsd0JBQXdCLENBQUMseUJBQXlCLENBQUM7SUFDeEYsQ0FBQztDQUNKO0FBcENELHNEQW9DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc0RlZGljYXRlZEhvc3RDbHVzdGVycyB9IGZyb20gJy4vZWNzLmdlbmVyYXRlZCc7XG4vLyBHZW5lcmF0ZWQgZnJvbSB0aGUgQWxpQ2xvdWQgUk9TIFJlc291cmNlIFNwZWNpZmljYXRpb25cbmV4cG9ydCB7IFJvc0RlZGljYXRlZEhvc3RDbHVzdGVycyBhcyBEZWRpY2F0ZWRIb3N0Q2x1c3RlcnNQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYERBVEFTT1VSQ0U6OkVDUzo6RGVkaWNhdGVkSG9zdENsdXN0ZXJzYFxuICovXG5leHBvcnQgaW50ZXJmYWNlIERlZGljYXRlZEhvc3RDbHVzdGVyc1Byb3BzIHtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGRlZGljYXRlZEhvc3RDbHVzdGVyTmFtZTogVGhlIG5hbWUgb2YgdGhlIGRlZGljYXRlZCBob3N0IGNsdXN0ZXIuXG4gICAgICovXG4gICAgcmVhZG9ubHkgZGVkaWNhdGVkSG9zdENsdXN0ZXJOYW1lPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgcmVzb3VyY2VHcm91cElkOiBUaGUgSUQgb2YgdGhlIHJlc291cmNlIGdyb3VwIHRvIHdoaWNoIHRoZSBkZWRpY2F0ZWQgaG9zdCBjbHVzdGVyIGJlbG9uZ3MuIFxuICAgICAqIElmIHRoaXMgcGFyYW1ldGVyIGlzIHNwZWNpZmllZCB0byBxdWVyeSByZXNvdXJjZXMsXG4gICAgICogdXAgdG8gMSwwMDAgcmVzb3VyY2VzIHRoYXQgYmVsb25nIHRvIHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UgZ3JvdXAgY2FuIGJlIGRpc3BsYXllZCBpbiB0aGUgcmVzcG9uc2UuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcmVzb3VyY2VHcm91cElkPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgem9uZUlkOiBUaGUgem9uZSBJRCBvZiB0aGUgZGVkaWNhdGVkIGhvc3QgY2x1c3Rlci4gXG4gICAgICogWW91IGNhbiBjYWxsIHRoZSBEZXNjcmliZVpvbmVzIG9wZXJhdGlvbiB0byBxdWVyeSB0aGUgbW9zdCByZWNlbnQgem9uZSBsaXN0LlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHpvbmVJZD86IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcbn1cblxuLyoqXG4gKiBBIFJPUyByZXNvdXJjZSB0eXBlOiAgYERBVEFTT1VSQ0U6OkVDUzo6RGVkaWNhdGVkSG9zdENsdXN0ZXJzYFxuICovXG5leHBvcnQgY2xhc3MgRGVkaWNhdGVkSG9zdENsdXN0ZXJzIGV4dGVuZHMgcm9zLlJlc291cmNlIHtcblxuICAgIC8qKlxuICAgICAqIEEgZmFjdG9yeSBtZXRob2QgdGhhdCBjcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIHRoaXMgY2xhc3MgZnJvbSBhbiBvYmplY3RcbiAgICAgKiBjb250YWluaW5nIHRoZSBwcm9wZXJ0aWVzIG9mIHRoaXMgUk9TIHJlc291cmNlLCB3aGljaCB3aWxsIGJlIGFzc2lnbmVkIHRvIFJPUyByZXNvdXJjZS5cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBEZWRpY2F0ZWRIb3N0Q2x1c3RlcklkczogVGhlIGxpc3Qgb2YgZGVkaWNhdGVkIGhvc3QgY2x1c3RlciBJRHMuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJEZWRpY2F0ZWRIb3N0Q2x1c3Rlcklkczogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIERlZGljYXRlZEhvc3RDbHVzdGVyczogVGhlIGxpc3Qgb2YgZGVkaWNhdGVkIGhvc3QgY2x1c3RlcnMuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJEZWRpY2F0ZWRIb3N0Q2x1c3RlcnM6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgREFUQVNPVVJDRTo6RUNTOjpEZWRpY2F0ZWRIb3N0Q2x1c3RlcnNgLlxuICAgICAqXG4gICAgICogUGFyYW0gc2NvcGUgLSBzY29wZSBpbiB3aGljaCB0aGlzIHJlc291cmNlIGlzIGRlZmluZWRcbiAgICAgKiBQYXJhbSBpZCAgICAtIHNjb3BlZCBpZCBvZiB0aGUgcmVzb3VyY2VcbiAgICAgKiBQYXJhbSBwcm9wcyAtIHJlc291cmNlIHByb3BlcnRpZXNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogcm9zLkNvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IERlZGljYXRlZEhvc3RDbHVzdGVyc1Byb3BzID0ge30sIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50OmJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCk7XG5cbiAgICAgICAgY29uc3Qgcm9zRGVkaWNhdGVkSG9zdENsdXN0ZXJzID0gbmV3IFJvc0RlZGljYXRlZEhvc3RDbHVzdGVycyh0aGlzLCBpZCwgIHtcbiAgICAgICAgICAgIGRlZGljYXRlZEhvc3RDbHVzdGVyTmFtZTogcHJvcHMuZGVkaWNhdGVkSG9zdENsdXN0ZXJOYW1lLFxuICAgICAgICAgICAgcmVzb3VyY2VHcm91cElkOiBwcm9wcy5yZXNvdXJjZUdyb3VwSWQsXG4gICAgICAgICAgICB6b25lSWQ6IHByb3BzLnpvbmVJZCxcbiAgICAgICAgfSwgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgJiYgdGhpcy5zdGFjay5lbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByb3NEZWRpY2F0ZWRIb3N0Q2x1c3RlcnM7XG4gICAgICAgIHRoaXMuYXR0ckRlZGljYXRlZEhvc3RDbHVzdGVySWRzID0gcm9zRGVkaWNhdGVkSG9zdENsdXN0ZXJzLmF0dHJEZWRpY2F0ZWRIb3N0Q2x1c3RlcklkcztcbiAgICAgICAgdGhpcy5hdHRyRGVkaWNhdGVkSG9zdENsdXN0ZXJzID0gcm9zRGVkaWNhdGVkSG9zdENsdXN0ZXJzLmF0dHJEZWRpY2F0ZWRIb3N0Q2x1c3RlcnM7XG4gICAgfVxufVxuIl19