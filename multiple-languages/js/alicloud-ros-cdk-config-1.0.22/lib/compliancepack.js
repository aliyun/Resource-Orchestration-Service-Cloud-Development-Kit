"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompliancePack = exports.CompliancePackProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const config_generated_1 = require("./config.generated");
Object.defineProperty(exports, "CompliancePackProperty", { enumerable: true, get: function () { return config_generated_1.RosCompliancePack; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::Config::CompliancePack`, which is used to create a compliance package.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosCompliancePack`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-config-compliancepack
 */
class CompliancePack extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosCompliancePack = new config_generated_1.RosCompliancePack(this, id, {
            compliancePackName: props.compliancePackName,
            description: props.description,
            configRules: props.configRules,
            compliancePackTemplateId: props.compliancePackTemplateId,
            riskLevel: props.riskLevel,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosCompliancePack;
        this.attrAccountId = rosCompliancePack.attrAccountId;
        this.attrCompliancePackId = rosCompliancePack.attrCompliancePackId;
        this.attrCompliancePackName = rosCompliancePack.attrCompliancePackName;
        this.attrCompliancePackTemplateId = rosCompliancePack.attrCompliancePackTemplateId;
        this.attrDescription = rosCompliancePack.attrDescription;
        this.attrRiskLevel = rosCompliancePack.attrRiskLevel;
    }
}
exports.CompliancePack = CompliancePack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGxpYW5jZXBhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjb21wbGlhbmNlcGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMseURBQXVEO0FBRXpCLHVHQUZyQixvQ0FBaUIsT0FFMEI7QUFrQ3BEOzs7O0dBSUc7QUFDSCxNQUFhLGNBQWUsU0FBUSxHQUFHLENBQUMsUUFBUTtJQWdDNUM7Ozs7T0FJRztJQUNILFlBQVksS0FBb0IsRUFBRSxFQUFVLEVBQUUsS0FBMEIsRUFBRSxtQ0FBMkMsSUFBSTtRQUNySCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxvQ0FBaUIsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFHO1lBQ3ZELGtCQUFrQixFQUFFLEtBQUssQ0FBQyxrQkFBa0I7WUFDNUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO1lBQzlCLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztZQUM5Qix3QkFBd0IsRUFBRSxLQUFLLENBQUMsd0JBQXdCO1lBQ3hELFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUztTQUM3QixFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLGlCQUFpQixDQUFDO1FBQ2xDLElBQUksQ0FBQyxhQUFhLEdBQUcsaUJBQWlCLENBQUMsYUFBYSxDQUFDO1FBQ3JELElBQUksQ0FBQyxvQkFBb0IsR0FBRyxpQkFBaUIsQ0FBQyxvQkFBb0IsQ0FBQztRQUNuRSxJQUFJLENBQUMsc0JBQXNCLEdBQUcsaUJBQWlCLENBQUMsc0JBQXNCLENBQUM7UUFDdkUsSUFBSSxDQUFDLDRCQUE0QixHQUFHLGlCQUFpQixDQUFDLDRCQUE0QixDQUFDO1FBQ25GLElBQUksQ0FBQyxlQUFlLEdBQUcsaUJBQWlCLENBQUMsZUFBZSxDQUFDO1FBQ3pELElBQUksQ0FBQyxhQUFhLEdBQUcsaUJBQWlCLENBQUMsYUFBYSxDQUFDO0lBQ3pELENBQUM7Q0FDSjtBQXZERCx3Q0F1REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyByb3MgZnJvbSAnQGFsaWNsb3VkL3Jvcy1jZGstY29yZSc7XG5pbXBvcnQgeyBSb3NDb21wbGlhbmNlUGFjayB9IGZyb20gJy4vY29uZmlnLmdlbmVyYXRlZCc7XG4vLyBHZW5lcmF0ZWQgZnJvbSB0aGUgQWxpQ2xvdWQgUk9TIFJlc291cmNlIFNwZWNpZmljYXRpb25cbmV4cG9ydCB7IFJvc0NvbXBsaWFuY2VQYWNrIGFzIENvbXBsaWFuY2VQYWNrUHJvcGVydHkgfTtcblxuLyoqXG4gKiBQcm9wZXJ0aWVzIGZvciBkZWZpbmluZyBhIGBDb21wbGlhbmNlUGFja2AuXG4gKiBTZWUgaHR0cHM6Ly93d3cuYWxpYmFiYWNsb3VkLmNvbS9oZWxwL3Jvcy9kZXZlbG9wZXItcmVmZXJlbmNlL2FsaXl1bi1jb25maWctY29tcGxpYW5jZXBhY2tcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb21wbGlhbmNlUGFja1Byb3BzIHtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGNvbXBsaWFuY2VQYWNrTmFtZTogQ29tcGxpYW5jZSBQYWNrYWdlIE5hbWVcbiAgICAgKi9cbiAgICByZWFkb25seSBjb21wbGlhbmNlUGFja05hbWU6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGRlc2NyaXB0aW9uOiBEZXNjcmlwdGlvblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGRlc2NyaXB0aW9uOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSByaXNrTGV2ZWw6IFJpcyBMZXZlbFxuICAgICAqL1xuICAgIHJlYWRvbmx5IHJpc2tMZXZlbDogbnVtYmVyIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgY29tcGxpYW5jZVBhY2tUZW1wbGF0ZUlkOiBDb21wbGlhbmNlIFBhY2thZ2UgVGVtcGxhdGUgSWRcbiAgICAgKi9cbiAgICByZWFkb25seSBjb21wbGlhbmNlUGFja1RlbXBsYXRlSWQ/OiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBjb25maWdSdWxlczogQ29uZmlnIFJ1bGUgTGlzdFxuICAgICAqL1xuICAgIHJlYWRvbmx5IGNvbmZpZ1J1bGVzPzogQXJyYXk8Um9zQ29tcGxpYW5jZVBhY2suQ29uZmlnUnVsZXNQcm9wZXJ0eSB8IHJvcy5JUmVzb2x2YWJsZT4gfCByb3MuSVJlc29sdmFibGU7XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyBlbmNhcHN1bGF0ZXMgYW5kIGV4dGVuZHMgdGhlIFJPUyByZXNvdXJjZSB0eXBlIGBBTElZVU46OkNvbmZpZzo6Q29tcGxpYW5jZVBhY2tgLCB3aGljaCBpcyB1c2VkIHRvIGNyZWF0ZSBhIGNvbXBsaWFuY2UgcGFja2FnZS5cbiAqIEBOb3RlIFRoaXMgY2xhc3MgbWF5IGhhdmUgc29tZSBuZXcgZnVuY3Rpb25zIHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQsIHNvIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNsYXNzIGluc3RlYWQgb2YgYFJvc0NvbXBsaWFuY2VQYWNrYGZvciBhIG1vcmUgY29udmVuaWVudCBkZXZlbG9wbWVudCBleHBlcmllbmNlLlxuICogU2VlIGh0dHBzOi8vd3d3LmFsaWJhYmFjbG91ZC5jb20vaGVscC9yb3MvZGV2ZWxvcGVyLXJlZmVyZW5jZS9hbGl5dW4tY29uZmlnLWNvbXBsaWFuY2VwYWNrXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21wbGlhbmNlUGFjayBleHRlbmRzIHJvcy5SZXNvdXJjZSB7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgQWNjb3VudElkOiBBbGl5dW4gVXNlciBJZFxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyQWNjb3VudElkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgQ29tcGxpYW5jZVBhY2tJZDogQ29tcGxpYW5jZSBQYWNrYWdlIElEXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJDb21wbGlhbmNlUGFja0lkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgQ29tcGxpYW5jZVBhY2tOYW1lOiBDb21wbGlhbmNlIFBhY2thZ2UgTmFtZVxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyQ29tcGxpYW5jZVBhY2tOYW1lOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgQ29tcGxpYW5jZVBhY2tUZW1wbGF0ZUlkOiBDb21wbGlhbmNlIFBhY2thZ2UgVGVtcGxhdGUgSWRcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ckNvbXBsaWFuY2VQYWNrVGVtcGxhdGVJZDogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIERlc2NyaXB0aW9uOiBEZXNjcmlwdGlvblxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyRGVzY3JpcHRpb246IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBSaXNrTGV2ZWw6IFJpcyBMZXZlbFxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBhdHRyUmlza0xldmVsOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQYXJhbSBzY29wZSAtIHNjb3BlIGluIHdoaWNoIHRoaXMgcmVzb3VyY2UgaXMgZGVmaW5lZFxuICAgICAqIFBhcmFtIGlkICAgIC0gc2NvcGVkIGlkIG9mIHRoZSByZXNvdXJjZVxuICAgICAqIFBhcmFtIHByb3BzIC0gcmVzb3VyY2UgcHJvcGVydGllc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiByb3MuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQ29tcGxpYW5jZVBhY2tQcm9wcywgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQ6Ym9vbGVhbiA9IHRydWUpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkKTtcblxuICAgICAgICBjb25zdCByb3NDb21wbGlhbmNlUGFjayA9IG5ldyBSb3NDb21wbGlhbmNlUGFjayh0aGlzLCBpZCwgIHtcbiAgICAgICAgICAgIGNvbXBsaWFuY2VQYWNrTmFtZTogcHJvcHMuY29tcGxpYW5jZVBhY2tOYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHByb3BzLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgY29uZmlnUnVsZXM6IHByb3BzLmNvbmZpZ1J1bGVzLFxuICAgICAgICAgICAgY29tcGxpYW5jZVBhY2tUZW1wbGF0ZUlkOiBwcm9wcy5jb21wbGlhbmNlUGFja1RlbXBsYXRlSWQsXG4gICAgICAgICAgICByaXNrTGV2ZWw6IHByb3BzLnJpc2tMZXZlbCxcbiAgICAgICAgfSwgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgJiYgdGhpcy5zdGFjay5lbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByb3NDb21wbGlhbmNlUGFjaztcbiAgICAgICAgdGhpcy5hdHRyQWNjb3VudElkID0gcm9zQ29tcGxpYW5jZVBhY2suYXR0ckFjY291bnRJZDtcbiAgICAgICAgdGhpcy5hdHRyQ29tcGxpYW5jZVBhY2tJZCA9IHJvc0NvbXBsaWFuY2VQYWNrLmF0dHJDb21wbGlhbmNlUGFja0lkO1xuICAgICAgICB0aGlzLmF0dHJDb21wbGlhbmNlUGFja05hbWUgPSByb3NDb21wbGlhbmNlUGFjay5hdHRyQ29tcGxpYW5jZVBhY2tOYW1lO1xuICAgICAgICB0aGlzLmF0dHJDb21wbGlhbmNlUGFja1RlbXBsYXRlSWQgPSByb3NDb21wbGlhbmNlUGFjay5hdHRyQ29tcGxpYW5jZVBhY2tUZW1wbGF0ZUlkO1xuICAgICAgICB0aGlzLmF0dHJEZXNjcmlwdGlvbiA9IHJvc0NvbXBsaWFuY2VQYWNrLmF0dHJEZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5hdHRyUmlza0xldmVsID0gcm9zQ29tcGxpYW5jZVBhY2suYXR0clJpc2tMZXZlbDtcbiAgICB9XG59XG4iXX0=