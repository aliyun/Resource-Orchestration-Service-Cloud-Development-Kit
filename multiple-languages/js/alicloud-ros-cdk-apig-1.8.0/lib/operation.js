"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = exports.OperationProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const apig_generated_1 = require("./apig.generated");
Object.defineProperty(exports, "OperationProperty", { enumerable: true, get: function () { return apig_generated_1.RosOperation; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::APIG::Operation`, which is used to create an operation for an HTTP API.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosOperation`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-apig-operation
 */
class Operation extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosOperation = new apig_generated_1.RosOperation(this, id, {
            path: props.path,
            description: props.description,
            operationName: props.operationName,
            method: props.method,
            httpApiId: props.httpApiId,
            mock: props.mock,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosOperation;
        this.attrCreateTime = rosOperation.attrCreateTime;
        this.attrDescription = rosOperation.attrDescription;
        this.attrMethod = rosOperation.attrMethod;
        this.attrMock = rosOperation.attrMock;
        this.attrOperationId = rosOperation.attrOperationId;
        this.attrOperationName = rosOperation.attrOperationName;
        this.attrPath = rosOperation.attrPath;
    }
}
exports.Operation = Operation;
//# sourceMappingURL=data:application/json;base64,