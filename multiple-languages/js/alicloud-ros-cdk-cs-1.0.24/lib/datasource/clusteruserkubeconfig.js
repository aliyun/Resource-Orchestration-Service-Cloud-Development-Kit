"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClusterUserKubeconfig = exports.ClusterUserKubeconfigProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cs_generated_1 = require("./cs.generated");
Object.defineProperty(exports, "ClusterUserKubeconfigProperty", { enumerable: true, get: function () { return cs_generated_1.RosClusterUserKubeconfig; } });
/**
 * This class encapsulates and extends the ROS resource type `DATASOURCE::CS::ClusterUserKubeconfig`, which is used to query the kubeconfig configurations of a Container Service for Kubernetes (ACK) cluster by cluster ID.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosClusterUserKubeconfig`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/datasource-cs-clusteruserkubeconfig
 */
class ClusterUserKubeconfig extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosClusterUserKubeconfig = new cs_generated_1.RosClusterUserKubeconfig(this, id, {
            privateIpAddress: props.privateIpAddress,
            clusterId: props.clusterId,
            temporaryDurationMinutes: props.temporaryDurationMinutes,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosClusterUserKubeconfig;
        this.attrClusterId = rosClusterUserKubeconfig.attrClusterId;
        this.attrConfig = rosClusterUserKubeconfig.attrConfig;
        this.attrExpiration = rosClusterUserKubeconfig.attrExpiration;
    }
}
exports.ClusterUserKubeconfig = ClusterUserKubeconfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2x1c3RlcnVzZXJrdWJlY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2x1c3RlcnVzZXJrdWJlY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE4QztBQUM5QyxpREFBMEQ7QUFFckIsOEdBRjVCLHVDQUF3QixPQUVpQztBQTRCbEU7Ozs7R0FJRztBQUNILE1BQWEscUJBQXNCLFNBQVEsR0FBRyxDQUFDLFFBQVE7SUFxQm5EOzs7O09BSUc7SUFDSCxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLEtBQWlDLEVBQUUsbUNBQTJDLElBQUk7UUFDNUgsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxnQ0FBZ0MsR0FBRyxnQ0FBZ0MsQ0FBQztRQUV6RSxNQUFNLHdCQUF3QixHQUFHLElBQUksdUNBQXdCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRztZQUNyRSxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsZ0JBQWdCO1lBQ3hDLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUztZQUMxQix3QkFBd0IsRUFBRSxLQUFLLENBQUMsd0JBQXdCO1NBQzNELEVBQUUsZ0NBQWdDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQ3BGLElBQUksQ0FBQyxRQUFRLEdBQUcsd0JBQXdCLENBQUM7UUFDekMsSUFBSSxDQUFDLGFBQWEsR0FBRyx3QkFBd0IsQ0FBQyxhQUFhLENBQUM7UUFDNUQsSUFBSSxDQUFDLFVBQVUsR0FBRyx3QkFBd0IsQ0FBQyxVQUFVLENBQUM7UUFDdEQsSUFBSSxDQUFDLGNBQWMsR0FBRyx3QkFBd0IsQ0FBQyxjQUFjLENBQUM7SUFDbEUsQ0FBQztDQUNKO0FBM0NELHNEQTJDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc0NsdXN0ZXJVc2VyS3ViZWNvbmZpZyB9IGZyb20gJy4vY3MuZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zQ2x1c3RlclVzZXJLdWJlY29uZmlnIGFzIENsdXN0ZXJVc2VyS3ViZWNvbmZpZ1Byb3BlcnR5IH07XG5cbi8qKlxuICogUHJvcGVydGllcyBmb3IgZGVmaW5pbmcgYSBgQ2x1c3RlclVzZXJLdWJlY29uZmlnYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvZGF0YXNvdXJjZS1jcy1jbHVzdGVydXNlcmt1YmVjb25maWdcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDbHVzdGVyVXNlckt1YmVjb25maWdQcm9wcyB7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBjbHVzdGVySWQ6IFRoZSBJRCBvZiB0aGUgQUNLIGNsdXN0ZXIuXG4gICAgICovXG4gICAgcmVhZG9ubHkgY2x1c3RlcklkOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBwcml2YXRlSXBBZGRyZXNzOiBTcGVjaWZpZXMgd2hldGhlciB0byBvYnRhaW4gdGhlIGNyZWRlbnRpYWwgdGhhdCBpcyB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIGNsdXN0ZXIgb3ZlciB0aGUgaW50ZXJuYWwgbmV0d29yay4gVmFsaWQgdmFsdWVzOlxuICAgICAqIHRydWU6IG9idGFpbnMgdGhlIGNyZWRlbnRpYWwgdGhhdCBpcyB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIGNsdXN0ZXIgb3ZlciB0aGUgaW50ZXJuYWwgbmV0d29yay5cbiAgICAgKiBmYWxzZTogb2J0YWlucyB0aGUgY3JlZGVudGlhbCB0aGF0IGlzIHVzZWQgdG8gY29ubmVjdCB0byB0aGUgY2x1c3RlciBvdmVyIHRoZSBJbnRlcm5ldC5cbiAgICAgKiBEZWZhdWx0IHZhbHVlOiBmYWxzZS5cbiAgICAgKi9cbiAgICByZWFkb25seSBwcml2YXRlSXBBZGRyZXNzPzogYm9vbGVhbiB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHRlbXBvcmFyeUR1cmF0aW9uTWludXRlczogVGhlIHZhbGlkaXR5IHBlcmlvZCBvZiBhIHRlbXBvcmFyeSBrdWJlY29uZmlnIGZpbGUuIFVuaXQ6IG1pbnV0ZXMuIFZhbGlkIHZhbHVlczogMTUgdG8gNDMyMC5cbiAgICAgKiBOb3RlIElmIHlvdSBkbyBub3Qgc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgdGhlIHN5c3RlbSBhdXRvbWF0aWNhbGx5IHNwZWNpZmllcyBhIHZhbGlkaXR5IHBlcmlvZCwgd2hpY2ggaXMgaW5kaWNhdGVkIGJ5IHRoZSBleHBpcmF0aW9uIGZpZWxkIGluIHRoZSByZXNwb25zZS5cbiAgICAgKi9cbiAgICByZWFkb25seSB0ZW1wb3JhcnlEdXJhdGlvbk1pbnV0ZXM/OiBudW1iZXIgfCByb3MuSVJlc29sdmFibGU7XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyBlbmNhcHN1bGF0ZXMgYW5kIGV4dGVuZHMgdGhlIFJPUyByZXNvdXJjZSB0eXBlIGBEQVRBU09VUkNFOjpDUzo6Q2x1c3RlclVzZXJLdWJlY29uZmlnYCwgd2hpY2ggaXMgdXNlZCB0byBxdWVyeSB0aGUga3ViZWNvbmZpZyBjb25maWd1cmF0aW9ucyBvZiBhIENvbnRhaW5lciBTZXJ2aWNlIGZvciBLdWJlcm5ldGVzIChBQ0spIGNsdXN0ZXIgYnkgY2x1c3RlciBJRC5cbiAqIEBOb3RlIFRoaXMgY2xhc3MgbWF5IGhhdmUgc29tZSBuZXcgZnVuY3Rpb25zIHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQsIHNvIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNsYXNzIGluc3RlYWQgb2YgYFJvc0NsdXN0ZXJVc2VyS3ViZWNvbmZpZ2Bmb3IgYSBtb3JlIGNvbnZlbmllbnQgZGV2ZWxvcG1lbnQgZXhwZXJpZW5jZS5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvZGF0YXNvdXJjZS1jcy1jbHVzdGVydXNlcmt1YmVjb25maWdcbiAqL1xuZXhwb3J0IGNsYXNzIENsdXN0ZXJVc2VyS3ViZWNvbmZpZyBleHRlbmRzIHJvcy5SZXNvdXJjZSB7XG4gICAgcHJvdGVjdGVkIHNjb3BlOiByb3MuQ29uc3RydWN0O1xuICAgIHByb3RlY3RlZCBpZDogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBwcm9wczogQ2x1c3RlclVzZXJLdWJlY29uZmlnUHJvcHM7XG4gICAgcHJvdGVjdGVkIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50OiBib29sZWFuO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIENsdXN0ZXJJZDogVGhlIElEIG9mIHRoZSBBQ0sgY2x1c3Rlci5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ckNsdXN0ZXJJZDogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIENvbmZpZzogVGhlIGNvbnRlbnQgb2YgdGhlIGt1YmVjb25maWcgZmlsZS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ckNvbmZpZzogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIEV4cGlyYXRpb246IFRoZSBleHBpcmF0aW9uIHRpbWUgb2YgdGhlIGt1YmVjb25maWcgZmlsZS4gVGhlIHZhbHVlIGlzIHRoZSBVVEMgdGltZSBkaXNwbGF5ZWQgaW4gUkZDMzMzOSBmb3JtYXQuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJFeHBpcmF0aW9uOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQYXJhbSBzY29wZSAtIHNjb3BlIGluIHdoaWNoIHRoaXMgcmVzb3VyY2UgaXMgZGVmaW5lZFxuICAgICAqIFBhcmFtIGlkICAgIC0gc2NvcGVkIGlkIG9mIHRoZSByZXNvdXJjZVxuICAgICAqIFBhcmFtIHByb3BzIC0gcmVzb3VyY2UgcHJvcGVydGllc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiByb3MuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQ2x1c3RlclVzZXJLdWJlY29uZmlnUHJvcHMsIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50OmJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCk7XG4gICAgICAgIHRoaXMuc2NvcGUgPSBzY29wZTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLnByb3BzID0gcHJvcHM7XG4gICAgICAgIHRoaXMuZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgPSBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDtcblxuICAgICAgICBjb25zdCByb3NDbHVzdGVyVXNlckt1YmVjb25maWcgPSBuZXcgUm9zQ2x1c3RlclVzZXJLdWJlY29uZmlnKHRoaXMsIGlkLCAge1xuICAgICAgICAgICAgcHJpdmF0ZUlwQWRkcmVzczogcHJvcHMucHJpdmF0ZUlwQWRkcmVzcyxcbiAgICAgICAgICAgIGNsdXN0ZXJJZDogcHJvcHMuY2x1c3RlcklkLFxuICAgICAgICAgICAgdGVtcG9yYXJ5RHVyYXRpb25NaW51dGVzOiBwcm9wcy50ZW1wb3JhcnlEdXJhdGlvbk1pbnV0ZXMsXG4gICAgICAgIH0sIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50ICYmIHRoaXMuc3RhY2suZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQpO1xuICAgICAgICB0aGlzLnJlc291cmNlID0gcm9zQ2x1c3RlclVzZXJLdWJlY29uZmlnO1xuICAgICAgICB0aGlzLmF0dHJDbHVzdGVySWQgPSByb3NDbHVzdGVyVXNlckt1YmVjb25maWcuYXR0ckNsdXN0ZXJJZDtcbiAgICAgICAgdGhpcy5hdHRyQ29uZmlnID0gcm9zQ2x1c3RlclVzZXJLdWJlY29uZmlnLmF0dHJDb25maWc7XG4gICAgICAgIHRoaXMuYXR0ckV4cGlyYXRpb24gPSByb3NDbHVzdGVyVXNlckt1YmVjb25maWcuYXR0ckV4cGlyYXRpb247XG4gICAgfVxufVxuIl19