"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransitRouterRouteTable = exports.TransitRouterRouteTableProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cen_generated_1 = require("./cen.generated");
Object.defineProperty(exports, "TransitRouterRouteTableProperty", { enumerable: true, get: function () { return cen_generated_1.RosTransitRouterRouteTable; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::CEN::TransitRouterRouteTable`, which is used to create a custom route table for an Enterprise Edition transit router.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosTransitRouterRouteTable`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-cen-transitrouterroutetable
 */
class TransitRouterRouteTable extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosTransitRouterRouteTable = new cen_generated_1.RosTransitRouterRouteTable(this, id, {
            transitRouterRouteTableDescription: props.transitRouterRouteTableDescription,
            transitRouterRouteTableName: props.transitRouterRouteTableName,
            transitRouterId: props.transitRouterId,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosTransitRouterRouteTable;
        this.attrClientToken = rosTransitRouterRouteTable.attrClientToken;
        this.attrTransitRouterId = rosTransitRouterRouteTable.attrTransitRouterId;
        this.attrTransitRouterRouteTableDescription = rosTransitRouterRouteTable.attrTransitRouterRouteTableDescription;
        this.attrTransitRouterRouteTableId = rosTransitRouterRouteTable.attrTransitRouterRouteTableId;
        this.attrTransitRouterRouteTableName = rosTransitRouterRouteTable.attrTransitRouterRouteTableName;
        this.attrTransitRouterRouteTableType = rosTransitRouterRouteTable.attrTransitRouterRouteTableType;
    }
}
exports.TransitRouterRouteTable = TransitRouterRouteTable;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdHJvdXRlcnJvdXRldGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0cmFuc2l0cm91dGVycm91dGV0YWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMsbURBQTZEO0FBRXRCLGdIQUY5QiwwQ0FBMEIsT0FFbUM7QUF3QnRFOzs7O0dBSUc7QUFDSCxNQUFhLHVCQUF3QixTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBZ0NyRDs7OztPQUlHO0lBQ0gsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUFtQyxFQUFFLG1DQUEyQyxJQUFJO1FBQzlILEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFakIsTUFBTSwwQkFBMEIsR0FBRyxJQUFJLDBDQUEwQixDQUFDLElBQUksRUFBRSxFQUFFLEVBQUc7WUFDekUsa0NBQWtDLEVBQUUsS0FBSyxDQUFDLGtDQUFrQztZQUM1RSwyQkFBMkIsRUFBRSxLQUFLLENBQUMsMkJBQTJCO1lBQzlELGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtTQUN6QyxFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLDBCQUEwQixDQUFDO1FBQzNDLElBQUksQ0FBQyxlQUFlLEdBQUcsMEJBQTBCLENBQUMsZUFBZSxDQUFDO1FBQ2xFLElBQUksQ0FBQyxtQkFBbUIsR0FBRywwQkFBMEIsQ0FBQyxtQkFBbUIsQ0FBQztRQUMxRSxJQUFJLENBQUMsc0NBQXNDLEdBQUcsMEJBQTBCLENBQUMsc0NBQXNDLENBQUM7UUFDaEgsSUFBSSxDQUFDLDZCQUE2QixHQUFHLDBCQUEwQixDQUFDLDZCQUE2QixDQUFDO1FBQzlGLElBQUksQ0FBQywrQkFBK0IsR0FBRywwQkFBMEIsQ0FBQywrQkFBK0IsQ0FBQztRQUNsRyxJQUFJLENBQUMsK0JBQStCLEdBQUcsMEJBQTBCLENBQUMsK0JBQStCLENBQUM7SUFDdEcsQ0FBQztDQUNKO0FBckRELDBEQXFEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJvcyBmcm9tICdAYWxpY2xvdWQvcm9zLWNkay1jb3JlJztcbmltcG9ydCB7IFJvc1RyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlIH0gZnJvbSAnLi9jZW4uZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGUgYXMgVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWNlbi10cmFuc2l0cm91dGVycm91dGV0YWJsZVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlUHJvcHMge1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgdHJhbnNpdFJvdXRlcklkOiBUcmFuc2l0Um91dGVySWRcbiAgICAgKi9cbiAgICByZWFkb25seSB0cmFuc2l0Um91dGVySWQ6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb246IFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb25cbiAgICAgKi9cbiAgICByZWFkb25seSB0cmFuc2l0Um91dGVyUm91dGVUYWJsZURlc2NyaXB0aW9uPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgdHJhbnNpdFJvdXRlclJvdXRlVGFibGVOYW1lOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZU5hbWVcbiAgICAgKi9cbiAgICByZWFkb25seSB0cmFuc2l0Um91dGVyUm91dGVUYWJsZU5hbWU/OiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyBlbmNhcHN1bGF0ZXMgYW5kIGV4dGVuZHMgdGhlIFJPUyByZXNvdXJjZSB0eXBlIGBBTElZVU46OkNFTjo6VHJhbnNpdFJvdXRlclJvdXRlVGFibGVgLCB3aGljaCBpcyB1c2VkIHRvIGNyZWF0ZSBhIGN1c3RvbSByb3V0ZSB0YWJsZSBmb3IgYW4gRW50ZXJwcmlzZSBFZGl0aW9uIHRyYW5zaXQgcm91dGVyLlxuICogQE5vdGUgVGhpcyBjbGFzcyBtYXkgaGF2ZSBzb21lIG5ldyBmdW5jdGlvbnMgdG8gZmFjaWxpdGF0ZSBkZXZlbG9wbWVudCwgc28gaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHRoaXMgY2xhc3MgaW5zdGVhZCBvZiBgUm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGVgZm9yIGEgbW9yZSBjb252ZW5pZW50IGRldmVsb3BtZW50IGV4cGVyaWVuY2UuXG4gKiBTZWUgaHR0cHM6Ly93d3cuYWxpYmFiYWNsb3VkLmNvbS9oZWxwL3Jvcy9kZXZlbG9wZXItcmVmZXJlbmNlL2FsaXl1bi1jZW4tdHJhbnNpdHJvdXRlcnJvdXRldGFibGVcbiAqL1xuZXhwb3J0IGNsYXNzIFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlIGV4dGVuZHMgcm9zLlJlc291cmNlIHtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBDbGllbnRUb2tlbjogQ2xpZW50VG9rZW5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ckNsaWVudFRva2VuOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgVHJhbnNpdFJvdXRlcklkOiBUcmFuc2l0Um91dGVySWRcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clRyYW5zaXRSb3V0ZXJJZDogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb246IFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb25cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb246IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgVHJhbnNpdFJvdXRlclJvdXRlVGFibGVOYW1lOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZU5hbWVcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlTmFtZTogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlVHlwZTogVHJhbnNpdFJvdXRlclJvdXRlVGFibGVUeXBlXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJUcmFuc2l0Um91dGVyUm91dGVUYWJsZVR5cGU6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFBhcmFtIHNjb3BlIC0gc2NvcGUgaW4gd2hpY2ggdGhpcyByZXNvdXJjZSBpcyBkZWZpbmVkXG4gICAgICogUGFyYW0gaWQgICAgLSBzY29wZWQgaWQgb2YgdGhlIHJlc291cmNlXG4gICAgICogUGFyYW0gcHJvcHMgLSByZXNvdXJjZSBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IHJvcy5Db25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgICAgIGNvbnN0IHJvc1RyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlID0gbmV3IFJvc1RyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlKHRoaXMsIGlkLCAge1xuICAgICAgICAgICAgdHJhbnNpdFJvdXRlclJvdXRlVGFibGVEZXNjcmlwdGlvbjogcHJvcHMudHJhbnNpdFJvdXRlclJvdXRlVGFibGVEZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlTmFtZTogcHJvcHMudHJhbnNpdFJvdXRlclJvdXRlVGFibGVOYW1lLFxuICAgICAgICAgICAgdHJhbnNpdFJvdXRlcklkOiBwcm9wcy50cmFuc2l0Um91dGVySWQsXG4gICAgICAgIH0sIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50ICYmIHRoaXMuc3RhY2suZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQpO1xuICAgICAgICB0aGlzLnJlc291cmNlID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGU7XG4gICAgICAgIHRoaXMuYXR0ckNsaWVudFRva2VuID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGUuYXR0ckNsaWVudFRva2VuO1xuICAgICAgICB0aGlzLmF0dHJUcmFuc2l0Um91dGVySWQgPSByb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZS5hdHRyVHJhbnNpdFJvdXRlcklkO1xuICAgICAgICB0aGlzLmF0dHJUcmFuc2l0Um91dGVyUm91dGVUYWJsZURlc2NyaXB0aW9uID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGUuYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlRGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlSWQgPSByb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZS5hdHRyVHJhbnNpdFJvdXRlclJvdXRlVGFibGVJZDtcbiAgICAgICAgdGhpcy5hdHRyVHJhbnNpdFJvdXRlclJvdXRlVGFibGVOYW1lID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGUuYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlTmFtZTtcbiAgICAgICAgdGhpcy5hdHRyVHJhbnNpdFJvdXRlclJvdXRlVGFibGVUeXBlID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGUuYXR0clRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlVHlwZTtcbiAgICB9XG59XG4iXX0=