"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransitRouterRouteTablePropagation = exports.TransitRouterRouteTablePropagationProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cen_generated_1 = require("./cen.generated");
Object.defineProperty(exports, "TransitRouterRouteTablePropagationProperty", { enumerable: true, get: function () { return cen_generated_1.RosTransitRouterRouteTablePropagation; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::CEN::TransitRouterRouteTablePropagation`, which is used to create a route learning correlation.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosTransitRouterRouteTablePropagation`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-cen-transitrouterroutetablepropagation
 */
class TransitRouterRouteTablePropagation extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        const rosTransitRouterRouteTablePropagation = new cen_generated_1.RosTransitRouterRouteTablePropagation(this, id, {
            transitRouterRouteTableId: props.transitRouterRouteTableId,
            transitRouterAttachmentId: props.transitRouterAttachmentId,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosTransitRouterRouteTablePropagation;
        this.attrResourceId = rosTransitRouterRouteTablePropagation.attrResourceId;
        this.attrResourceType = rosTransitRouterRouteTablePropagation.attrResourceType;
        this.attrTransitRouterAttachmentId = rosTransitRouterRouteTablePropagation.attrTransitRouterAttachmentId;
        this.attrTransitRouterRouteTableId = rosTransitRouterRouteTablePropagation.attrTransitRouterRouteTableId;
    }
}
exports.TransitRouterRouteTablePropagation = TransitRouterRouteTablePropagation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdHJvdXRlcnJvdXRldGFibGVwcm9wYWdhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRyYW5zaXRyb3V0ZXJyb3V0ZXRhYmxlcHJvcGFnYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQThDO0FBQzlDLG1EQUF3RTtBQUV0QiwySEFGekMscURBQXFDLE9BRThDO0FBbUI1Rjs7OztHQUlHO0FBQ0gsTUFBYSxrQ0FBbUMsU0FBUSxHQUFHLENBQUMsUUFBUTtJQXNCaEU7Ozs7T0FJRztJQUNILFlBQVksS0FBb0IsRUFBRSxFQUFVLEVBQUUsS0FBOEMsRUFBRSxtQ0FBMkMsSUFBSTtRQUN6SSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLE1BQU0scUNBQXFDLEdBQUcsSUFBSSxxREFBcUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxFQUFHO1lBQy9GLHlCQUF5QixFQUFFLEtBQUssQ0FBQyx5QkFBeUI7WUFDMUQseUJBQXlCLEVBQUUsS0FBSyxDQUFDLHlCQUF5QjtTQUM3RCxFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLHFDQUFxQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxjQUFjLEdBQUcscUNBQXFDLENBQUMsY0FBYyxDQUFDO1FBQzNFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxxQ0FBcUMsQ0FBQyxnQkFBZ0IsQ0FBQztRQUMvRSxJQUFJLENBQUMsNkJBQTZCLEdBQUcscUNBQXFDLENBQUMsNkJBQTZCLENBQUM7UUFDekcsSUFBSSxDQUFDLDZCQUE2QixHQUFHLHFDQUFxQyxDQUFDLDZCQUE2QixDQUFDO0lBQzdHLENBQUM7Q0FDSjtBQXhDRCxnRkF3Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyByb3MgZnJvbSAnQGFsaWNsb3VkL3Jvcy1jZGstY29yZSc7XG5pbXBvcnQgeyBSb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uIH0gZnJvbSAnLi9jZW4uZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvbiBhcyBUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uUHJvcGVydHkgfTtcblxuLyoqXG4gKiBQcm9wZXJ0aWVzIGZvciBkZWZpbmluZyBhIGBUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWNlbi10cmFuc2l0cm91dGVycm91dGV0YWJsZXByb3BhZ2F0aW9uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvblByb3BzIHtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWQ6IFRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWRcbiAgICAgKi9cbiAgICByZWFkb25seSB0cmFuc2l0Um91dGVyQXR0YWNobWVudElkOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSB0cmFuc2l0Um91dGVyUm91dGVUYWJsZUlkOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkXG4gICAgICovXG4gICAgcmVhZG9ubHkgdHJhbnNpdFJvdXRlclJvdXRlVGFibGVJZDogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgZW5jYXBzdWxhdGVzIGFuZCBleHRlbmRzIHRoZSBST1MgcmVzb3VyY2UgdHlwZSBgQUxJWVVOOjpDRU46OlRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlUHJvcGFnYXRpb25gLCB3aGljaCBpcyB1c2VkIHRvIGNyZWF0ZSBhIHJvdXRlIGxlYXJuaW5nIGNvcnJlbGF0aW9uLlxuICogQE5vdGUgVGhpcyBjbGFzcyBtYXkgaGF2ZSBzb21lIG5ldyBmdW5jdGlvbnMgdG8gZmFjaWxpdGF0ZSBkZXZlbG9wbWVudCwgc28gaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHRoaXMgY2xhc3MgaW5zdGVhZCBvZiBgUm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvbmBmb3IgYSBtb3JlIGNvbnZlbmllbnQgZGV2ZWxvcG1lbnQgZXhwZXJpZW5jZS5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWNlbi10cmFuc2l0cm91dGVycm91dGV0YWJsZXByb3BhZ2F0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uIGV4dGVuZHMgcm9zLlJlc291cmNlIHtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBSZXNvdXJjZUlkOiBSZXNvdXJjZUlkXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJSZXNvdXJjZUlkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBBdHRyaWJ1dGUgUmVzb3VyY2VUeXBlOiBSZXNvdXJjZVR5cGVcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clJlc291cmNlVHlwZTogcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogQXR0cmlidXRlIFRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWQ6IFRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWRcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWQ6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkOiBUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGF0dHJUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQYXJhbSBzY29wZSAtIHNjb3BlIGluIHdoaWNoIHRoaXMgcmVzb3VyY2UgaXMgZGVmaW5lZFxuICAgICAqIFBhcmFtIGlkICAgIC0gc2NvcGVkIGlkIG9mIHRoZSByZXNvdXJjZVxuICAgICAqIFBhcmFtIHByb3BzIC0gcmVzb3VyY2UgcHJvcGVydGllc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiByb3MuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvblByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgICAgIGNvbnN0IHJvc1RyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlUHJvcGFnYXRpb24gPSBuZXcgUm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvbih0aGlzLCBpZCwgIHtcbiAgICAgICAgICAgIHRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlSWQ6IHByb3BzLnRyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlSWQsXG4gICAgICAgICAgICB0cmFuc2l0Um91dGVyQXR0YWNobWVudElkOiBwcm9wcy50cmFuc2l0Um91dGVyQXR0YWNobWVudElkLFxuICAgICAgICB9LCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCAmJiB0aGlzLnN0YWNrLmVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50KTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IHJvc1RyYW5zaXRSb3V0ZXJSb3V0ZVRhYmxlUHJvcGFnYXRpb247XG4gICAgICAgIHRoaXMuYXR0clJlc291cmNlSWQgPSByb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uLmF0dHJSZXNvdXJjZUlkO1xuICAgICAgICB0aGlzLmF0dHJSZXNvdXJjZVR5cGUgPSByb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uLmF0dHJSZXNvdXJjZVR5cGU7XG4gICAgICAgIHRoaXMuYXR0clRyYW5zaXRSb3V0ZXJBdHRhY2htZW50SWQgPSByb3NUcmFuc2l0Um91dGVyUm91dGVUYWJsZVByb3BhZ2F0aW9uLmF0dHJUcmFuc2l0Um91dGVyQXR0YWNobWVudElkO1xuICAgICAgICB0aGlzLmF0dHJUcmFuc2l0Um91dGVyUm91dGVUYWJsZUlkID0gcm9zVHJhbnNpdFJvdXRlclJvdXRlVGFibGVQcm9wYWdhdGlvbi5hdHRyVHJhbnNpdFJvdXRlclJvdXRlVGFibGVJZDtcbiAgICB9XG59XG4iXX0=