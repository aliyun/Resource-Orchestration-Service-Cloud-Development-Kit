"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiffableCollection = void 0;
/**
 * Calculate differences of immutable elements
 */
class DiffableCollection {
    constructor() {
        this.additions = [];
        this.removals = [];
        this.oldElements = [];
        this.newElements = [];
    }
    addOld(...elements) {
        this.oldElements.push(...elements);
    }
    addNew(...elements) {
        this.newElements.push(...elements);
    }
    calculateDiff() {
        this.additions.push(...difference(this.newElements, this.oldElements));
        this.removals.push(...difference(this.oldElements, this.newElements));
    }
    get hasChanges() {
        return this.additions.length + this.removals.length > 0;
    }
    get hasAdditions() {
        return this.additions.length > 0;
    }
    get hasRemovals() {
        return this.removals.length > 0;
    }
}
exports.DiffableCollection = DiffableCollection;
/**
 * Whether a collection contains some element (by value)
 */
function contains(element, xs) {
    return xs.some((x) => x.equal(element));
}
/**
 * Return collection except for elements
 */
function difference(collection, elements) {
    return collection.filter((x) => !contains(x, elements));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZmFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkaWZmYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNILE1BQWEsa0JBQWtCO0lBQS9CO1FBQ2tCLGNBQVMsR0FBUSxFQUFFLENBQUM7UUFDcEIsYUFBUSxHQUFRLEVBQUUsQ0FBQztRQUVsQixnQkFBVyxHQUFRLEVBQUUsQ0FBQztRQUN0QixnQkFBVyxHQUFRLEVBQUUsQ0FBQztJQTBCekMsQ0FBQztJQXhCUSxNQUFNLENBQUMsR0FBRyxRQUFhO1FBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxHQUFHLFFBQWE7UUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sYUFBYTtRQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELElBQVcsVUFBVTtRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFXLFdBQVc7UUFDcEIsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNGO0FBL0JELGdEQStCQztBQVNEOztHQUVHO0FBQ0gsU0FBUyxRQUFRLENBQWtCLE9BQVUsRUFBRSxFQUFPO0lBQ3BELE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQzFDLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQVMsVUFBVSxDQUFrQixVQUFlLEVBQUUsUUFBYTtJQUNqRSxPQUFPLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQzFELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENhbGN1bGF0ZSBkaWZmZXJlbmNlcyBvZiBpbW11dGFibGUgZWxlbWVudHNcbiAqL1xuZXhwb3J0IGNsYXNzIERpZmZhYmxlQ29sbGVjdGlvbjxUIGV4dGVuZHMgRXE8VD4+IHtcbiAgcHVibGljIHJlYWRvbmx5IGFkZGl0aW9uczogVFtdID0gW107XG4gIHB1YmxpYyByZWFkb25seSByZW1vdmFsczogVFtdID0gW107XG5cbiAgcHJpdmF0ZSByZWFkb25seSBvbGRFbGVtZW50czogVFtdID0gW107XG4gIHByaXZhdGUgcmVhZG9ubHkgbmV3RWxlbWVudHM6IFRbXSA9IFtdO1xuXG4gIHB1YmxpYyBhZGRPbGQoLi4uZWxlbWVudHM6IFRbXSkge1xuICAgIHRoaXMub2xkRWxlbWVudHMucHVzaCguLi5lbGVtZW50cyk7XG4gIH1cblxuICBwdWJsaWMgYWRkTmV3KC4uLmVsZW1lbnRzOiBUW10pIHtcbiAgICB0aGlzLm5ld0VsZW1lbnRzLnB1c2goLi4uZWxlbWVudHMpO1xuICB9XG5cbiAgcHVibGljIGNhbGN1bGF0ZURpZmYoKSB7XG4gICAgdGhpcy5hZGRpdGlvbnMucHVzaCguLi5kaWZmZXJlbmNlKHRoaXMubmV3RWxlbWVudHMsIHRoaXMub2xkRWxlbWVudHMpKTtcbiAgICB0aGlzLnJlbW92YWxzLnB1c2goLi4uZGlmZmVyZW5jZSh0aGlzLm9sZEVsZW1lbnRzLCB0aGlzLm5ld0VsZW1lbnRzKSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGhhc0NoYW5nZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWRkaXRpb25zLmxlbmd0aCArIHRoaXMucmVtb3ZhbHMubGVuZ3RoID4gMDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgaGFzQWRkaXRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmFkZGl0aW9ucy5sZW5ndGggPiAwO1xuICB9XG5cbiAgcHVibGljIGdldCBoYXNSZW1vdmFscygpIHtcbiAgICByZXR1cm4gdGhpcy5yZW1vdmFscy5sZW5ndGggPiAwO1xuICB9XG59XG5cbi8qKlxuICogVGhpbmdzIHRoYXQgY2FuIGJlIGNvbXBhcmVkIHRvIHRoZW1zZWx2ZXMgKGJ5IHZhbHVlKVxuICovXG5pbnRlcmZhY2UgRXE8VD4ge1xuICBlcXVhbChvdGhlcjogVCk6IGJvb2xlYW47XG59XG5cbi8qKlxuICogV2hldGhlciBhIGNvbGxlY3Rpb24gY29udGFpbnMgc29tZSBlbGVtZW50IChieSB2YWx1ZSlcbiAqL1xuZnVuY3Rpb24gY29udGFpbnM8VCBleHRlbmRzIEVxPFQ+PihlbGVtZW50OiBULCB4czogVFtdKSB7XG4gIHJldHVybiB4cy5zb21lKCh4KSA9PiB4LmVxdWFsKGVsZW1lbnQpKTtcbn1cblxuLyoqXG4gKiBSZXR1cm4gY29sbGVjdGlvbiBleGNlcHQgZm9yIGVsZW1lbnRzXG4gKi9cbmZ1bmN0aW9uIGRpZmZlcmVuY2U8VCBleHRlbmRzIEVxPFQ+Pihjb2xsZWN0aW9uOiBUW10sIGVsZW1lbnRzOiBUW10pIHtcbiAgcmV0dXJuIGNvbGxlY3Rpb24uZmlsdGVyKCh4KSA9PiAhY29udGFpbnMoeCwgZWxlbWVudHMpKTtcbn1cbiJdfQ==