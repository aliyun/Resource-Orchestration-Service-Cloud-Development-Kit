"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrFirewallRoutePolicy = exports.TrFirewallRoutePolicyProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cloudfw_generated_1 = require("./cloudfw.generated");
Object.defineProperty(exports, "TrFirewallRoutePolicyProperty", { enumerable: true, get: function () { return cloudfw_generated_1.RosTrFirewallRoutePolicy; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::CLOUDFW::TrFirewallRoutePolicy`.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosTrFirewallRoutePolicy`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-cloudfw-trfirewallroutepolicy
 */
class TrFirewallRoutePolicy extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosTrFirewallRoutePolicy = new cloudfw_generated_1.RosTrFirewallRoutePolicy(this, id, {
            srcCandidateList: props.srcCandidateList,
            policyType: props.policyType,
            policyDescription: props.policyDescription,
            policyName: props.policyName,
            firewallId: props.firewallId,
            destCandidateList: props.destCandidateList,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosTrFirewallRoutePolicy;
        this.attrFirewallId = rosTrFirewallRoutePolicy.attrFirewallId;
        this.attrTrFirewallRoutePolicyId = rosTrFirewallRoutePolicy.attrTrFirewallRoutePolicyId;
    }
}
exports.TrFirewallRoutePolicy = TrFirewallRoutePolicy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJmaXJld2FsbHJvdXRlcG9saWN5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHJmaXJld2FsbHJvdXRlcG9saWN5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE4QztBQUM5QywyREFBK0Q7QUFFMUIsOEdBRjVCLDRDQUF3QixPQUVpQztBQTBDbEU7Ozs7R0FJRztBQUNILE1BQWEscUJBQXNCLFNBQVEsR0FBRyxDQUFDLFFBQVE7SUFnQm5EOzs7O09BSUc7SUFDSCxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLEtBQWlDLEVBQUUsbUNBQTJDLElBQUk7UUFDNUgsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxnQ0FBZ0MsR0FBRyxnQ0FBZ0MsQ0FBQztRQUV6RSxNQUFNLHdCQUF3QixHQUFHLElBQUksNENBQXdCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRztZQUNyRSxnQkFBZ0IsRUFBRSxLQUFLLENBQUMsZ0JBQWdCO1lBQ3hDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVTtZQUM1QixpQkFBaUIsRUFBRSxLQUFLLENBQUMsaUJBQWlCO1lBQzFDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVTtZQUM1QixVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVU7WUFDNUIsaUJBQWlCLEVBQUUsS0FBSyxDQUFDLGlCQUFpQjtTQUM3QyxFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLHdCQUF3QixDQUFDO1FBQ3pDLElBQUksQ0FBQyxjQUFjLEdBQUcsd0JBQXdCLENBQUMsY0FBYyxDQUFDO1FBQzlELElBQUksQ0FBQywyQkFBMkIsR0FBRyx3QkFBd0IsQ0FBQywyQkFBMkIsQ0FBQztJQUM1RixDQUFDO0NBQ0o7QUF4Q0Qsc0RBd0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcm9zIGZyb20gJ0BhbGljbG91ZC9yb3MtY2RrLWNvcmUnO1xuaW1wb3J0IHsgUm9zVHJGaXJld2FsbFJvdXRlUG9saWN5IH0gZnJvbSAnLi9jbG91ZGZ3LmdlbmVyYXRlZCc7XG4vLyBHZW5lcmF0ZWQgZnJvbSB0aGUgQWxpQ2xvdWQgUk9TIFJlc291cmNlIFNwZWNpZmljYXRpb25cbmV4cG9ydCB7IFJvc1RyRmlyZXdhbGxSb3V0ZVBvbGljeSBhcyBUckZpcmV3YWxsUm91dGVQb2xpY3lQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYFRyRmlyZXdhbGxSb3V0ZVBvbGljeWAuXG4gKiBTZWUgaHR0cHM6Ly93d3cuYWxpYmFiYWNsb3VkLmNvbS9oZWxwL3Jvcy9kZXZlbG9wZXItcmVmZXJlbmNlL2FsaXl1bi1jbG91ZGZ3LXRyZmlyZXdhbGxyb3V0ZXBvbGljeVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRyRmlyZXdhbGxSb3V0ZVBvbGljeVByb3BzIHtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGZpcmV3YWxsSWQ6IFRoZSBpbnN0YW5jZSBJRCBvZiB0aGUgVlBDIGZpcmV3YWxsLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGZpcmV3YWxsSWQ6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHBvbGljeURlc2NyaXB0aW9uOiBUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHRyYWZmaWMgcmVkaXJlY3Rpb24gaW5zdGFuY2UuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcG9saWN5RGVzY3JpcHRpb246IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHBvbGljeU5hbWU6IFRoZSBuYW1lIG9mIHRoZSB0cmFmZmljIHJlZGlyZWN0aW9uIGluc3RhbmNlLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHBvbGljeU5hbWU6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHBvbGljeVR5cGU6IFRoZSB0eXBlIG9mIHRoZSB0cmFmZmljIHJlZGlyZWN0aW9uIHNjZW5hcmlvIG9mIHRoZSBWUEMgZmlyZXdhbGwuIFZhbGlkIHZhbHVlczpcbiAgICAgKiBmdWxsbWVzaDogaW50ZXJjb25uZWN0ZWQgaW5zdGFuY2VzXG4gICAgICogb25lX3RvX29uZTogaW5zdGFuY2UgdG8gaW5zdGFuY2VcbiAgICAgKiBlbmRfdG9fZW5kOiBpbnN0YW5jZSB0byBpbnN0YW5jZXNcbiAgICAgKi9cbiAgICByZWFkb25seSBwb2xpY3lUeXBlOiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBkZXN0Q2FuZGlkYXRlTGlzdDogVGhlIHNlY29uZGFyeSB0cmFmZmljIHJlZGlyZWN0aW9uIGluc3RhbmNlcy5cbiAgICAgKi9cbiAgICByZWFkb25seSBkZXN0Q2FuZGlkYXRlTGlzdD86IEFycmF5PFJvc1RyRmlyZXdhbGxSb3V0ZVBvbGljeS5EZXN0Q2FuZGlkYXRlTGlzdFByb3BlcnR5IHwgcm9zLklSZXNvbHZhYmxlPiB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IHNyY0NhbmRpZGF0ZUxpc3Q6IFRoZSBwcmltYXJ5IHRyYWZmaWMgcmVkaXJlY3Rpb24gaW5zdGFuY2VzLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IHNyY0NhbmRpZGF0ZUxpc3Q/OiBBcnJheTxSb3NUckZpcmV3YWxsUm91dGVQb2xpY3kuU3JjQ2FuZGlkYXRlTGlzdFByb3BlcnR5IHwgcm9zLklSZXNvbHZhYmxlPiB8IHJvcy5JUmVzb2x2YWJsZTtcbn1cblxuLyoqXG4gKiBUaGlzIGNsYXNzIGVuY2Fwc3VsYXRlcyBhbmQgZXh0ZW5kcyB0aGUgUk9TIHJlc291cmNlIHR5cGUgYEFMSVlVTjo6Q0xPVURGVzo6VHJGaXJld2FsbFJvdXRlUG9saWN5YC5cbiAqIEBOb3RlIFRoaXMgY2xhc3MgbWF5IGhhdmUgc29tZSBuZXcgZnVuY3Rpb25zIHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQsIHNvIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNsYXNzIGluc3RlYWQgb2YgYFJvc1RyRmlyZXdhbGxSb3V0ZVBvbGljeWBmb3IgYSBtb3JlIGNvbnZlbmllbnQgZGV2ZWxvcG1lbnQgZXhwZXJpZW5jZS5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWNsb3VkZnctdHJmaXJld2FsbHJvdXRlcG9saWN5XG4gKi9cbmV4cG9ydCBjbGFzcyBUckZpcmV3YWxsUm91dGVQb2xpY3kgZXh0ZW5kcyByb3MuUmVzb3VyY2Uge1xuICAgIHByb3RlY3RlZCBzY29wZTogcm9zLkNvbnN0cnVjdDtcbiAgICBwcm90ZWN0ZWQgaWQ6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgcHJvcHM6IFRyRmlyZXdhbGxSb3V0ZVBvbGljeVByb3BzO1xuICAgIHByb3RlY3RlZCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBGaXJld2FsbElkOiBUaGUgaW5zdGFuY2UgSUQgb2YgdGhlIFZQQyBmaXJld2FsbC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0ckZpcmV3YWxsSWQ6IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIEF0dHJpYnV0ZSBUckZpcmV3YWxsUm91dGVQb2xpY3lJZDogVGhlIElEIG9mIHRoZSByb3V0aW5nIHBvbGljeS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgYXR0clRyRmlyZXdhbGxSb3V0ZVBvbGljeUlkOiByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQYXJhbSBzY29wZSAtIHNjb3BlIGluIHdoaWNoIHRoaXMgcmVzb3VyY2UgaXMgZGVmaW5lZFxuICAgICAqIFBhcmFtIGlkICAgIC0gc2NvcGVkIGlkIG9mIHRoZSByZXNvdXJjZVxuICAgICAqIFBhcmFtIHByb3BzIC0gcmVzb3VyY2UgcHJvcGVydGllc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiByb3MuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogVHJGaXJld2FsbFJvdXRlUG9saWN5UHJvcHMsIGVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50OmJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCk7XG4gICAgICAgIHRoaXMuc2NvcGUgPSBzY29wZTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLnByb3BzID0gcHJvcHM7XG4gICAgICAgIHRoaXMuZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgPSBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDtcblxuICAgICAgICBjb25zdCByb3NUckZpcmV3YWxsUm91dGVQb2xpY3kgPSBuZXcgUm9zVHJGaXJld2FsbFJvdXRlUG9saWN5KHRoaXMsIGlkLCAge1xuICAgICAgICAgICAgc3JjQ2FuZGlkYXRlTGlzdDogcHJvcHMuc3JjQ2FuZGlkYXRlTGlzdCxcbiAgICAgICAgICAgIHBvbGljeVR5cGU6IHByb3BzLnBvbGljeVR5cGUsXG4gICAgICAgICAgICBwb2xpY3lEZXNjcmlwdGlvbjogcHJvcHMucG9saWN5RGVzY3JpcHRpb24sXG4gICAgICAgICAgICBwb2xpY3lOYW1lOiBwcm9wcy5wb2xpY3lOYW1lLFxuICAgICAgICAgICAgZmlyZXdhbGxJZDogcHJvcHMuZmlyZXdhbGxJZCxcbiAgICAgICAgICAgIGRlc3RDYW5kaWRhdGVMaXN0OiBwcm9wcy5kZXN0Q2FuZGlkYXRlTGlzdCxcbiAgICAgICAgfSwgZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQgJiYgdGhpcy5zdGFjay5lbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCk7XG4gICAgICAgIHRoaXMucmVzb3VyY2UgPSByb3NUckZpcmV3YWxsUm91dGVQb2xpY3k7XG4gICAgICAgIHRoaXMuYXR0ckZpcmV3YWxsSWQgPSByb3NUckZpcmV3YWxsUm91dGVQb2xpY3kuYXR0ckZpcmV3YWxsSWQ7XG4gICAgICAgIHRoaXMuYXR0clRyRmlyZXdhbGxSb3V0ZVBvbGljeUlkID0gcm9zVHJGaXJld2FsbFJvdXRlUG9saWN5LmF0dHJUckZpcmV3YWxsUm91dGVQb2xpY3lJZDtcbiAgICB9XG59XG4iXX0=