"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SAMLIdentityProvider = exports.SAMLIdentityProviderProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const cloudsso_generated_1 = require("./cloudsso.generated");
Object.defineProperty(exports, "SAMLIdentityProviderProperty", { enumerable: true, get: function () { return cloudsso_generated_1.RosSAMLIdentityProvider; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::CloudSSO::SAMLIdentityProvider`, which is used to configure the information about a Security Assertion Markup Language (SAML) identity provider (IdP).
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosSAMLIdentityProvider`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-cloudsso-samlidentityprovider
 */
class SAMLIdentityProvider extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosSAMLIdentityProvider = new cloudsso_generated_1.RosSAMLIdentityProvider(this, id, {
            entityId: props.entityId,
            ssoStatus: props.ssoStatus,
            directoryId: props.directoryId,
            encodedMetadataDocument: props.encodedMetadataDocument,
            wantRequestSigned: props.wantRequestSigned,
            loginUrl: props.loginUrl,
            x509Certificate: props.x509Certificate,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosSAMLIdentityProvider;
    }
}
exports.SAMLIdentityProvider = SAMLIdentityProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FtbGlkZW50aXR5cHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzYW1saWRlbnRpdHlwcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBOEM7QUFDOUMsNkRBQStEO0FBRTNCLDZHQUYzQiw0Q0FBdUIsT0FFZ0M7QUFpRGhFOzs7O0dBSUc7QUFDSCxNQUFhLG9CQUFxQixTQUFRLEdBQUcsQ0FBQyxRQUFRO0lBTWxEOzs7O09BSUc7SUFDSCxZQUFZLEtBQW9CLEVBQUUsRUFBVSxFQUFFLEtBQWdDLEVBQUUsbUNBQTJDLElBQUk7UUFDM0gsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxnQ0FBZ0MsR0FBRyxnQ0FBZ0MsQ0FBQztRQUV6RSxNQUFNLHVCQUF1QixHQUFHLElBQUksNENBQXVCLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRztZQUNuRSxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7WUFDeEIsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTO1lBQzFCLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztZQUM5Qix1QkFBdUIsRUFBRSxLQUFLLENBQUMsdUJBQXVCO1lBQ3RELGlCQUFpQixFQUFFLEtBQUssQ0FBQyxpQkFBaUI7WUFDMUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1lBQ3hCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtTQUN6QyxFQUFFLGdDQUFnQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUNwRixJQUFJLENBQUMsUUFBUSxHQUFHLHVCQUF1QixDQUFDO0lBQzVDLENBQUM7Q0FDSjtBQTdCRCxvREE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyByb3MgZnJvbSAnQGFsaWNsb3VkL3Jvcy1jZGstY29yZSc7XG5pbXBvcnQgeyBSb3NTQU1MSWRlbnRpdHlQcm92aWRlciB9IGZyb20gJy4vY2xvdWRzc28uZ2VuZXJhdGVkJztcbi8vIEdlbmVyYXRlZCBmcm9tIHRoZSBBbGlDbG91ZCBST1MgUmVzb3VyY2UgU3BlY2lmaWNhdGlvblxuZXhwb3J0IHsgUm9zU0FNTElkZW50aXR5UHJvdmlkZXIgYXMgU0FNTElkZW50aXR5UHJvdmlkZXJQcm9wZXJ0eSB9O1xuXG4vKipcbiAqIFByb3BlcnRpZXMgZm9yIGRlZmluaW5nIGEgYFNBTUxJZGVudGl0eVByb3ZpZGVyYC5cbiAqIFNlZSBodHRwczovL3d3dy5hbGliYWJhY2xvdWQuY29tL2hlbHAvcm9zL2RldmVsb3Blci1yZWZlcmVuY2UvYWxpeXVuLWNsb3Vkc3NvLXNhbWxpZGVudGl0eXByb3ZpZGVyXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU0FNTElkZW50aXR5UHJvdmlkZXJQcm9wcyB7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBkaXJlY3RvcnlJZDogVGhlIElEIG9mIHRoZSBkaXJlY3RvcnkuXG4gICAgICovXG4gICAgcmVhZG9ubHkgZGlyZWN0b3J5SWQ6IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGVuY29kZWRNZXRhZGF0YURvY3VtZW50OiBUaGUgbWV0YWRhdGEgZmlsZSBvZiB0aGUgSWRQLiBUaGUgdmFsdWUgb2YgdGhpcyBwYXJhbWV0ZXIgaXMgQmFzZTY0LWVuY29kZWQuXG4gICAgICogVGhlIGZpbGUgaXMgcHJvdmlkZWQgYnkgdGhlIElkUCB0aGF0IHN1cHBvcnRzIFNBTUwgMi4wLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGVuY29kZWRNZXRhZGF0YURvY3VtZW50Pzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xuXG4gICAgLyoqXG4gICAgICogUHJvcGVydHkgZW50aXR5SWQ6IFRoZSBlbnRpdHkgSUQgb2YgdGhlIElkUC5cbiAgICAgKi9cbiAgICByZWFkb25seSBlbnRpdHlJZD86IHN0cmluZyB8IHJvcy5JUmVzb2x2YWJsZTtcblxuICAgIC8qKlxuICAgICAqIFByb3BlcnR5IGxvZ2luVXJsOiBUaGUgbG9nb24gVVJMIG9mIHRoZSBJZFAuXG4gICAgICovXG4gICAgcmVhZG9ubHkgbG9naW5Vcmw/OiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSBzc29TdGF0dXM6IFRoZSBzdGF0dXMgb2YgU1NPIGxvZ29uLiBWYWxpZCB2YWx1ZXM6XG4gICAgICogLSBFbmFibGVkXG4gICAgICogLSBEaXNhYmxlZCAoZGVmYXVsdClcbiAgICAgKi9cbiAgICByZWFkb25seSBzc29TdGF0dXM/OiBzdHJpbmcgfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSB3YW50UmVxdWVzdFNpZ25lZDogU3BlY2lmaWVzIHdoZXRoZXIgQ2xvdWRTU08gbmVlZHMgdG8gc2lnbiBTQU1MIHJlcXVlc3RzLiBUaGUgcmVxdWVzdHMgYXJlIHNlbnQgd2hlbiB1c2VycyBsb2cgb24gdG8gdGhlIENsb3VkU1NPIHVzZXIgcG9ydGFsIHRvIGluaXRpYXRlIFNBTUwtYmFzZWQgU1NPLiBWYWxpZCB2YWx1ZXM6XG4gICAgICogLSB0cnVlOiB5ZXNcbiAgICAgKiAtIGZhbHNlOiBubyAoZGVmYXVsdClcbiAgICAgKi9cbiAgICByZWFkb25seSB3YW50UmVxdWVzdFNpZ25lZD86IGJvb2xlYW4gfCByb3MuSVJlc29sdmFibGU7XG5cbiAgICAvKipcbiAgICAgKiBQcm9wZXJ0eSB4NTA5Q2VydGlmaWNhdGU6IFRoZSBYLjUwOSBjZXJ0aWZpY2F0ZSBuIHRoZSBQRU0gZm9ybWF0LiBJZiB5b3Ugc3BlY2lmeSB0aGlzIHBhcmFtZXRlciwgYWxsIGV4aXN0aW5nIGNlcnRpZmljYXRlcyBhcmUgcmVwbGFjZWQuXG4gICAgICovXG4gICAgcmVhZG9ubHkgeDUwOUNlcnRpZmljYXRlPzogc3RyaW5nIHwgcm9zLklSZXNvbHZhYmxlO1xufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgZW5jYXBzdWxhdGVzIGFuZCBleHRlbmRzIHRoZSBST1MgcmVzb3VyY2UgdHlwZSBgQUxJWVVOOjpDbG91ZFNTTzo6U0FNTElkZW50aXR5UHJvdmlkZXJgLCB3aGljaCBpcyB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgaW5mb3JtYXRpb24gYWJvdXQgYSBTZWN1cml0eSBBc3NlcnRpb24gTWFya3VwIExhbmd1YWdlIChTQU1MKSBpZGVudGl0eSBwcm92aWRlciAoSWRQKS5cbiAqIEBOb3RlIFRoaXMgY2xhc3MgbWF5IGhhdmUgc29tZSBuZXcgZnVuY3Rpb25zIHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQsIHNvIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIGNsYXNzIGluc3RlYWQgb2YgYFJvc1NBTUxJZGVudGl0eVByb3ZpZGVyYGZvciBhIG1vcmUgY29udmVuaWVudCBkZXZlbG9wbWVudCBleHBlcmllbmNlLlxuICogU2VlIGh0dHBzOi8vd3d3LmFsaWJhYmFjbG91ZC5jb20vaGVscC9yb3MvZGV2ZWxvcGVyLXJlZmVyZW5jZS9hbGl5dW4tY2xvdWRzc28tc2FtbGlkZW50aXR5cHJvdmlkZXJcbiAqL1xuZXhwb3J0IGNsYXNzIFNBTUxJZGVudGl0eVByb3ZpZGVyIGV4dGVuZHMgcm9zLlJlc291cmNlIHtcbiAgICBwcm90ZWN0ZWQgc2NvcGU6IHJvcy5Db25zdHJ1Y3Q7XG4gICAgcHJvdGVjdGVkIGlkOiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIHByb3BzOiBTQU1MSWRlbnRpdHlQcm92aWRlclByb3BzO1xuICAgIHByb3RlY3RlZCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDogYm9vbGVhbjtcblxuICAgIC8qKlxuICAgICAqIFBhcmFtIHNjb3BlIC0gc2NvcGUgaW4gd2hpY2ggdGhpcyByZXNvdXJjZSBpcyBkZWZpbmVkXG4gICAgICogUGFyYW0gaWQgICAgLSBzY29wZWQgaWQgb2YgdGhlIHJlc291cmNlXG4gICAgICogUGFyYW0gcHJvcHMgLSByZXNvdXJjZSBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IHJvcy5Db25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTQU1MSWRlbnRpdHlQcm92aWRlclByb3BzLCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludDpib29sZWFuID0gdHJ1ZSkge1xuICAgICAgICBzdXBlcihzY29wZSwgaWQpO1xuICAgICAgICB0aGlzLnNjb3BlID0gc2NvcGU7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICAgICAgICB0aGlzLmVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50ID0gZW5hYmxlUmVzb3VyY2VQcm9wZXJ0eUNvbnN0cmFpbnQ7XG5cbiAgICAgICAgY29uc3Qgcm9zU0FNTElkZW50aXR5UHJvdmlkZXIgPSBuZXcgUm9zU0FNTElkZW50aXR5UHJvdmlkZXIodGhpcywgaWQsICB7XG4gICAgICAgICAgICBlbnRpdHlJZDogcHJvcHMuZW50aXR5SWQsXG4gICAgICAgICAgICBzc29TdGF0dXM6IHByb3BzLnNzb1N0YXR1cyxcbiAgICAgICAgICAgIGRpcmVjdG9yeUlkOiBwcm9wcy5kaXJlY3RvcnlJZCxcbiAgICAgICAgICAgIGVuY29kZWRNZXRhZGF0YURvY3VtZW50OiBwcm9wcy5lbmNvZGVkTWV0YWRhdGFEb2N1bWVudCxcbiAgICAgICAgICAgIHdhbnRSZXF1ZXN0U2lnbmVkOiBwcm9wcy53YW50UmVxdWVzdFNpZ25lZCxcbiAgICAgICAgICAgIGxvZ2luVXJsOiBwcm9wcy5sb2dpblVybCxcbiAgICAgICAgICAgIHg1MDlDZXJ0aWZpY2F0ZTogcHJvcHMueDUwOUNlcnRpZmljYXRlLFxuICAgICAgICB9LCBlbmFibGVSZXNvdXJjZVByb3BlcnR5Q29uc3RyYWludCAmJiB0aGlzLnN0YWNrLmVuYWJsZVJlc291cmNlUHJvcGVydHlDb25zdHJhaW50KTtcbiAgICAgICAgdGhpcy5yZXNvdXJjZSA9IHJvc1NBTUxJZGVudGl0eVByb3ZpZGVyO1xuICAgIH1cbn1cbiJdfQ==