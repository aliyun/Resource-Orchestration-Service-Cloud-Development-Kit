"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotGroup = exports.SnapshotGroupProperty = void 0;
const ros = require("@alicloud/ros-cdk-core");
const ecs_generated_1 = require("./ecs.generated");
Object.defineProperty(exports, "SnapshotGroupProperty", { enumerable: true, get: function () { return ecs_generated_1.RosSnapshotGroup; } });
/**
 * This class encapsulates and extends the ROS resource type `ALIYUN::ECS::SnapshotGroup`, which is used to create a snapshot-consistent group for cloud disks that are attached to an Elastic Compute Service (ECS) instance. A snapshot-consistent group contains snapshots of one or more cloud disks.
 * @Note This class may have some new functions to facilitate development, so it is recommended to use this class instead of `RosSnapshotGroup`for a more convenient development experience.
 * See https://www.alibabacloud.com/help/ros/developer-reference/aliyun-ecs-snapshotgroup
 */
class SnapshotGroup extends ros.Resource {
    /**
     * Param scope - scope in which this resource is defined
     * Param id    - scoped id of the resource
     * Param props - resource properties
     */
    constructor(scope, id, props = {}, enableResourcePropertyConstraint = true) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        this.props = props;
        this.enableResourcePropertyConstraint = enableResourcePropertyConstraint;
        const rosSnapshotGroup = new ecs_generated_1.RosSnapshotGroup(this, id, {
            diskIds: props.diskIds,
            description: props.description,
            resourceGroupId: props.resourceGroupId,
            instanceId: props.instanceId,
            tags: props.tags,
            excludeDiskIds: props.excludeDiskIds,
            name: props.name,
        }, enableResourcePropertyConstraint && this.stack.enableResourcePropertyConstraint);
        this.resource = rosSnapshotGroup;
        this.attrSnapshotGroupId = rosSnapshotGroup.attrSnapshotGroupId;
    }
}
exports.SnapshotGroup = SnapshotGroup;
//# sourceMappingURL=data:application/json;base64,